webpackHotUpdate("rounda",{

/***/ "./packages/rounda/src/components/AboutBlack.js":
/*!******************************************************!*\
  !*** ./packages/rounda/src/components/AboutBlack.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1vwjmiy-About\",styles:\"align-self:flex-end;width:50%;@media only screen and (max-width:768px){width:70%;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"m3b3di-About\",styles:\"display:grid;grid-template-columns:440px;grid-template-rows:auto;margin-top:10vw;color:#f7f7a8;font-family:\\\"gangsterRegular\\\";@media only screen and (max-width:768px){grid-template-columns:1fr;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0NrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"hm4h2h-About\",styles:\"pointer-events:none;overflow:hidden;width:100%;height:100vw;max-width:440px;max-height:585px;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOENvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUQyRCIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var About=(_ref5)=>{var{state}=_ref5;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"black\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_1)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref2},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref3},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,playsInline:true,css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_3,type:\"video/mp4\"}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_2))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1azuo9s0\",label:\"Container\"})( false?undefined:{name:\"149sjcw\",styles:\"display:flex;flex-direction:column;padding:10vw 5vw 10vw 5vw;background-color:black;color:white;z-index:1;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0U0QiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRCbGFjay5qcz8zNGU4Il0sIm5hbWVzIjpbImdzYXAiLCJyZWdpc3RlclBsdWdpbiIsIlNjcm9sbFRyaWdnZXIiLCJBYm91dCIsInN0YXRlIiwiZGF0YSIsInNvdXJjZSIsImdldCIsInJvdXRlciIsImxpbmsiLCJwYWdlIiwidHlwZSIsImlkIiwiY29udGVudCIsImFjZiIsInBhcmFncmFwaF8xIiwiYW5pbWF0aW9uXzMiLCJwYXJhZ3JhcGhfMiIsImNvbm5lY3QiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztxUkFJQUEsNENBQUksQ0FBQ0MsY0FBTCxDQUFvQkMsZ0VBQXBCLEUsNCtiQUVBLEdBQU1DLE1BQUssQ0FBRyxTQUFlLElBQWQsQ0FBRUMsS0FBRixDQUFjLE9BQzNCO0FBQ0EsR0FBTUMsS0FBSSxDQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLEtBQUksQ0FBR04sS0FBSyxDQUFDRSxNQUFOLENBQWFELElBQUksQ0FBQ00sSUFBbEIsRUFBd0JOLElBQUksQ0FBQ08sRUFBN0IsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsUUFBTyxDQUFHSCxJQUFJLENBQUNJLEdBQXJCLENBQ0E7QUFFQSxNQUNFLHNIQUNFLDBEQUFDLFNBQUQsRUFBVyxTQUFTLENBQUMsT0FBckIsRUFDRSxpRUFDRSxHQUFHLEtBREwsRUFVRSxtRUFBSUQsT0FBTyxDQUFDRSxXQUFaLENBVkYsQ0FERixDQWNFLGlFQUNFLEdBQUcsTUFETCxFQWNFLGlFQUNFLEdBQUcsTUFETCxFQVVFLG1FQUFPLFFBQVEsS0FBZixDQUFnQixJQUFJLEtBQXBCLENBQXFCLEtBQUssS0FBMUIsQ0FBMkIsV0FBVyxLQUF0QyxDQUF1QyxHQUFHLE1BQTFDLEVBS1Ysb0VBQVEsR0FBRyxDQUFFRixPQUFPLENBQUNHLFdBQXJCLENBQWtDLElBQUksQ0FBQyxXQUF2QyxFQUxVLENBVkYsQ0FkRixDQWdDRSxtRUFBSUgsT0FBTyxDQUFDSSxXQUFaLENBaENGLENBZEYsQ0FERixDQURGLENBcURELENBOURELENBZ0VlQyx1SEFBTyxDQUFDZixLQUFELENBQXRCLEVBRUEsR0FBTWdCLFVBQVMsc2xIQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBBYm91dCA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwiYmxhY2tcIj5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDcwJTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMX08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDQ0MHB4O1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG87XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDEwdnc7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZjdmN2E4O1xyXG4gICAgICAgICAgICBmb250LWZhbWlseTogXCJnYW5nc3RlclJlZ3VsYXJcIjtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDU4NXB4O1xyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8dmlkZW8gYXV0b1BsYXkgbG9vcCBtdXRlZCBwbGF5c0lubGluZSBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgIGB9PlxyXG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmFuaW1hdGlvbl8zfSB0eXBlPVwidmlkZW8vbXA0XCIvPlxyXG48L3ZpZGVvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQWJvdXQpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcGFkZGluZzogMTB2dyA1dncgMTB2dyA1dnc7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHotaW5kZXg6IDE7XHJcbmA7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/AboutBlack.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/AboutTop.js":
/*!****************************************************!*\
  !*** ./packages/rounda/src/components/AboutTop.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1iw13ks-About\",styles:\"display:flex;flex-direction:row;@media only screen and (max-width:768px){flex-direction:column;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtDa0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"1p2l0fg-About\",styles:\"margin-left:5vw;margin-right:10vw;width:40%;@media only screen and (max-width:768px){width:60%;margin-right:0;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"og67aj-About\",styles:\"pointer-events:none;overflow:hidden;margin-right:5vw;width:100vw;height:100vw;max-width:440px;max-height:446px;@media only screen and (max-width:768px){margin-right:0;width:80vw;align-self:center;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBEb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBFMkQiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref5= false?undefined:{name:\"1qqoewy-About\",styles:\"display:grid;grid-template-columns:640px;grid-template-rows:auto auto;margin-top:20vh;margin-bottom:20vh;margin-left:5vw;@media only screen and (max-width:768px){margin-left:0;grid-template-columns:1fr;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFGa0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref6= false?undefined:{name:\"nyfqnw-About\",styles:\"@media only screen and (max-width:768px){width:70%;margin-left:5vw;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Hb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref7= false?undefined:{name:\"10q0wwr-About\",styles:\"pointer-events:none;overflow:hidden;width:100%;height:100vw;max-width:640px;max-height:346px;@media only screen and (max-width:768px){justify-self:center;max-width:100%;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThHb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref8= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRIMkQiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var About=(_ref9)=>{var{state}=_ref9;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nvar topSection=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);var pinTheSection=()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"].create({trigger:[topSection.current],start:\"bottom bottom\",pin:true,pinSpacing:false});};Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{pinTheSection();},[]);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"top\",ref:topSection},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{css:_ref2},content.title_1),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref3},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,playsInline:true,css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_1,type:\"video/mp4\"})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref5},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{css:_ref6},content.title_2),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref7},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,playsInline:true,css:_ref8},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_2,type:\"video/mp4\"}))))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e10egvbw0\",label:\"Container\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRJNEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgcGxheXNJbmxpbmUgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanM/NDU3OSJdLCJuYW1lcyI6WyJnc2FwIiwicmVnaXN0ZXJQbHVnaW4iLCJTY3JvbGxUcmlnZ2VyIiwiQWJvdXQiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZSIsInR5cGUiLCJpZCIsImNvbnRlbnQiLCJhY2YiLCJ0b3BTZWN0aW9uIiwidXNlUmVmIiwicGluVGhlU2VjdGlvbiIsImNyZWF0ZSIsInRyaWdnZXIiLCJjdXJyZW50Iiwic3RhcnQiLCJwaW4iLCJwaW5TcGFjaW5nIiwidXNlRWZmZWN0IiwidGl0bGVfMSIsImFuaW1hdGlvbl8xIiwidGl0bGVfMiIsImFuaW1hdGlvbl8yIiwiY29ubmVjdCIsIkNvbnRhaW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FSQUlBQSw0Q0FBSSxDQUFDQyxjQUFMLENBQW9CQyxnRUFBcEIsRSxvNDhDQUVBLEdBQU1DLE1BQUssQ0FBRyxTQUFlLElBQWQsQ0FBRUMsS0FBRixDQUFjLE9BQzNCO0FBQ0EsR0FBTUMsS0FBSSxDQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLEtBQUksQ0FBR04sS0FBSyxDQUFDRSxNQUFOLENBQWFELElBQUksQ0FBQ00sSUFBbEIsRUFBd0JOLElBQUksQ0FBQ08sRUFBN0IsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsUUFBTyxDQUFHSCxJQUFJLENBQUNJLEdBQXJCLENBQ0E7QUFFQSxHQUFNQyxXQUFVLENBQUdDLG9EQUFNLENBQUMsSUFBRCxDQUF6QixDQUVBLEdBQU1DLGNBQWEsQ0FBRyxJQUFNLENBQzFCZixnRUFBYSxDQUFDZ0IsTUFBZCxDQUFxQixDQUNuQkMsT0FBTyxDQUFFLENBQUNKLFVBQVUsQ0FBQ0ssT0FBWixDQURVLENBRW5CQyxLQUFLLENBQUUsZUFGWSxDQUduQkMsR0FBRyxDQUFFLElBSGMsQ0FJbkJDLFVBQVUsQ0FBRSxLQUpPLENBQXJCLEVBTUQsQ0FQRCxDQVNBQyx1REFBUyxDQUFDLElBQU0sQ0FDZFAsYUFBYSxHQUNkLENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQSxNQUNFLHNIQUNFLDBEQUFDLFNBQUQsRUFBVyxTQUFTLENBQUMsS0FBckIsQ0FBMkIsR0FBRyxDQUFFRixVQUFoQyxFQUNFLGlFQUNFLEdBQUcsS0FETCxFQVVFLCtEQUNFLEdBQUcsTUFETCxFQVlHRixPQUFPLENBQUNZLE9BWlgsQ0FWRixDQXdCRSxpRUFDRSxHQUFHLE1BREwsRUFpQkUsbUVBQU8sUUFBUSxLQUFmLENBQWdCLElBQUksS0FBcEIsQ0FBcUIsS0FBSyxLQUExQixDQUEyQixXQUFXLEtBQXRDLENBQXVDLEdBQUcsTUFBMUMsRUFLVixvRUFBUSxHQUFHLENBQUVaLE9BQU8sQ0FBQ2EsV0FBckIsQ0FBa0MsSUFBSSxDQUFDLFdBQXZDLEVBTFUsQ0FqQkYsQ0F4QkYsQ0FERixDQW9ERSxpRUFDRSxHQUFHLE1BREwsRUFlRSwrREFDRSxHQUFHLE1BREwsRUFRR2IsT0FBTyxDQUFDYyxPQVJYLENBZkYsQ0F5QkUsaUVBQ0UsR0FBRyxNQURMLEVBZUUsbUVBQU8sUUFBUSxLQUFmLENBQWdCLElBQUksS0FBcEIsQ0FBcUIsS0FBSyxLQUExQixDQUEyQixXQUFXLEtBQXRDLENBQXVDLEdBQUcsTUFBMUMsRUFLVixvRUFBUSxHQUFHLENBQUVkLE9BQU8sQ0FBQ2UsV0FBckIsQ0FBa0MsSUFBSSxDQUFDLFdBQXZDLEVBTFUsQ0FmRixDQXpCRixDQXBERixDQURGLENBREYsQ0EwR0QsQ0FsSUQsQ0FvSWVDLHVIQUFPLENBQUMxQixLQUFELENBQXRCLEVBRUEsR0FBTTJCLFVBQVMsMnNMQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBBYm91dCA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgY29uc3QgdG9wU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcclxuXHJcbiAgY29uc3QgcGluVGhlU2VjdGlvbiA9ICgpID0+IHtcclxuICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcclxuICAgICAgdHJpZ2dlcjogW3RvcFNlY3Rpb24uY3VycmVudF0sXHJcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcclxuICAgICAgcGluOiB0cnVlLFxyXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBwaW5UaGVTZWN0aW9uKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJ0b3BcIiByZWY9e3RvcFNlY3Rpb259PlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHBcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDV2dztcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDQwJTtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDYwJTtcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMDtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA0NDZweDtcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8dmlkZW8gYXV0b1BsYXkgbG9vcCBtdXRlZCBwbGF5c0lubGluZSBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICAgIGB9PlxyXG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmFuaW1hdGlvbl8xfSB0eXBlPVwidmlkZW8vbXA0XCIvPlxyXG48L3ZpZGVvPlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcblxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDY0MHB4O1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgbWFyZ2luLXRvcDogMjB2aDtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjB2aDtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDV2dztcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNzAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDV2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIHtjb250ZW50LnRpdGxlXzJ9XHJcbiAgICAgICAgICA8L3A+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDY0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDM0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBqdXN0aWZ5LXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzJ9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChBYm91dCk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YGA7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/AboutTop.js\n");

/***/ })

})