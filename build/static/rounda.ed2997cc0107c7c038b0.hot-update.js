webpackHotUpdate("rounda",{

/***/ "./packages/rounda/src/components/AboutBlack.js":
/*!******************************************************!*\
  !*** ./packages/rounda/src/components/AboutBlack.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1vwjmiy-About\",styles:\"align-self:flex-end;width:50%;@media only screen and (max-width:768px){width:70%;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUJrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"m3b3di-About\",styles:\"display:grid;grid-template-columns:440px;grid-template-rows:auto;margin-top:10vw;color:#f7f7a8;font-family:\\\"gangsterRegular\\\";@media only screen and (max-width:768px){grid-template-columns:1fr;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0NrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"hm4h2h-About\",styles:\"pointer-events:none;overflow:hidden;width:100%;height:100vw;max-width:440px;max-height:585px;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOENvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUQrQyIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var About=(_ref5)=>{var{state}=_ref5;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"black\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_1)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref2},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref3},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_3,type:\"video/mp4\"}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_2))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1azuo9s0\",label:\"Container\"})( false?undefined:{name:\"149sjcw\",styles:\"display:flex;flex-direction:column;padding:10vw 5vw 10vw 5vw;background-color:black;color:white;z-index:1;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0QmxhY2suanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0U0QiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRCbGFjay5qcz8zNGU4Il0sIm5hbWVzIjpbImdzYXAiLCJyZWdpc3RlclBsdWdpbiIsIlNjcm9sbFRyaWdnZXIiLCJBYm91dCIsInN0YXRlIiwiZGF0YSIsInNvdXJjZSIsImdldCIsInJvdXRlciIsImxpbmsiLCJwYWdlIiwidHlwZSIsImlkIiwiY29udGVudCIsImFjZiIsInBhcmFncmFwaF8xIiwiYW5pbWF0aW9uXzMiLCJwYXJhZ3JhcGhfMiIsImNvbm5lY3QiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztxUkFJQUEsNENBQUksQ0FBQ0MsY0FBTCxDQUFvQkMsZ0VBQXBCLEUsNDZiQUVBLEdBQU1DLE1BQUssQ0FBRyxTQUFlLElBQWQsQ0FBRUMsS0FBRixDQUFjLE9BQzNCO0FBQ0EsR0FBTUMsS0FBSSxDQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLEtBQUksQ0FBR04sS0FBSyxDQUFDRSxNQUFOLENBQWFELElBQUksQ0FBQ00sSUFBbEIsRUFBd0JOLElBQUksQ0FBQ08sRUFBN0IsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsUUFBTyxDQUFHSCxJQUFJLENBQUNJLEdBQXJCLENBQ0E7QUFFQSxNQUNFLHNIQUNFLDBEQUFDLFNBQUQsRUFBVyxTQUFTLENBQUMsT0FBckIsRUFDRSxpRUFDRSxHQUFHLEtBREwsRUFVRSxtRUFBSUQsT0FBTyxDQUFDRSxXQUFaLENBVkYsQ0FERixDQWNFLGlFQUNFLEdBQUcsTUFETCxFQWNFLGlFQUNFLEdBQUcsTUFETCxFQVVFLG1FQUFPLFFBQVEsS0FBZixDQUFnQixJQUFJLEtBQXBCLENBQXFCLEtBQUssS0FBMUIsQ0FBMkIsR0FBRyxNQUE5QixFQUtWLG9FQUFRLEdBQUcsQ0FBRUYsT0FBTyxDQUFDRyxXQUFyQixDQUFrQyxJQUFJLENBQUMsV0FBdkMsRUFMVSxDQVZGLENBZEYsQ0FnQ0UsbUVBQUlILE9BQU8sQ0FBQ0ksV0FBWixDQWhDRixDQWRGLENBREYsQ0FERixDQXFERCxDQTlERCxDQWdFZUMsdUhBQU8sQ0FBQ2YsS0FBRCxDQUF0QixFQUVBLEdBQU1nQixVQUFTLHNrSEFBZiIsImZpbGUiOiIuL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9BYm91dEJsYWNrLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cImJsYWNrXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICB3aWR0aDogNTAlO1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA0NDBweDtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAxMHZ3O1xyXG4gICAgICAgICAgICBjb2xvcjogI2Y3ZjdhODtcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIGhlaWdodDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgbWF4LXdpZHRoOiA0NDBweDtcclxuICAgICAgICAgICAgICBtYXgtaGVpZ2h0OiA1ODVweDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fM30gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzJ9PC9wPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHBhZGRpbmc6IDEwdncgNXZ3IDEwdncgNXZ3O1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsYWNrO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICB6LWluZGV4OiAxO1xyXG5gO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/AboutBlack.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/AboutPeople.js":
/*!*******************************************************!*\
  !*** ./packages/rounda/src/components/AboutPeople.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"13kcrqj-About\",styles:\"display:grid;grid-template-columns:1fr 1fr;justify-items:center;column-gap:5vw;margin:10vw;img{width:100%;}p{font-size:initial;}a{position:static;color:black;text-decoration:none;}p:nth-of-type(1){font-size:18px;}@media only screen and (max-width:425px){margin-left:3vw;margin-right:3vw;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0UGVvcGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1CZ0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRQZW9wbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBBYm91dCA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxDb250YWluZXJcclxuICAgICAgICBjbGFzc05hbWU9XCJwZW9wbGVcIlxyXG4gICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgIGNvbHVtbi1nYXA6IDV2dztcclxuICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBpbml0aWFsO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDN2dztcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzdnc7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgICAgPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8aW1nIHNyYz17Y29udGVudC5wb3J0cmFpdF8xfSAvPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZGVzY3JpcHRpb25fMSB9fVxyXG4gICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQucG9ydHJhaXRfMn0gLz5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uXzIgfX1cclxuICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChBYm91dCk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YGA7XHJcbiJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var About=(_ref2)=>{var{state}=_ref2;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"people\",css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.portrait_1}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.description_1}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.portrait_2}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.description_2}}))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e4glcyc0\",label:\"Container\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0UGVvcGxlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXNFNEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRQZW9wbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBBYm91dCA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxDb250YWluZXJcclxuICAgICAgICBjbGFzc05hbWU9XCJwZW9wbGVcIlxyXG4gICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICAgIGp1c3RpZnktaXRlbXM6IGNlbnRlcjtcclxuICAgICAgICAgIGNvbHVtbi1nYXA6IDV2dztcclxuICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiBpbml0aWFsO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGEge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBwOm50aC1vZi10eXBlKDEpIHtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDN2dztcclxuICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAzdnc7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgYH1cclxuICAgICAgPlxyXG4gICAgICAgIDxkaXY+XHJcbiAgICAgICAgICA8aW1nIHNyYz17Y29udGVudC5wb3J0cmFpdF8xfSAvPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZGVzY3JpcHRpb25fMSB9fVxyXG4gICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQucG9ydHJhaXRfMn0gLz5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uXzIgfX1cclxuICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChBYm91dCk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YGA7XHJcbiJdfQ== */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRQZW9wbGUuanM/N2EyNiJdLCJuYW1lcyI6WyJnc2FwIiwicmVnaXN0ZXJQbHVnaW4iLCJTY3JvbGxUcmlnZ2VyIiwiQWJvdXQiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZSIsInR5cGUiLCJpZCIsImNvbnRlbnQiLCJhY2YiLCJwb3J0cmFpdF8xIiwiX19odG1sIiwiZGVzY3JpcHRpb25fMSIsInBvcnRyYWl0XzIiLCJkZXNjcmlwdGlvbl8yIiwiY29ubmVjdCIsIkNvbnRhaW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FSQUlBQSw0Q0FBSSxDQUFDQyxjQUFMLENBQW9CQyxnRUFBcEIsRSxvckdBRUEsR0FBTUMsTUFBSyxDQUFHLFNBQWUsSUFBZCxDQUFFQyxLQUFGLENBQWMsT0FDM0I7QUFDQSxHQUFNQyxLQUFJLENBQUdELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxHQUFiLENBQWlCSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHTixLQUFLLENBQUNFLE1BQU4sQ0FBYUQsSUFBSSxDQUFDTSxJQUFsQixFQUF3Qk4sSUFBSSxDQUFDTyxFQUE3QixDQUFiLENBQ0E7QUFDQSxHQUFNQyxRQUFPLENBQUdILElBQUksQ0FBQ0ksR0FBckIsQ0FDQTtBQUVBLE1BQ0Usc0hBQ0UsMERBQUMsU0FBRCxFQUNFLFNBQVMsQ0FBQyxRQURaLENBRUUsR0FBRyxLQUZMLEVBaUNFLHFFQUNFLGlFQUFLLEdBQUcsQ0FBRUQsT0FBTyxDQUFDRSxVQUFsQixFQURGLENBRUUsaUVBQ0UsdUJBQXVCLENBQUUsQ0FBRUMsTUFBTSxDQUFFSCxPQUFPLENBQUNJLGFBQWxCLENBRDNCLEVBRkYsQ0FqQ0YsQ0F3Q0UscUVBQ0UsaUVBQUssR0FBRyxDQUFFSixPQUFPLENBQUNLLFVBQWxCLEVBREYsQ0FFRSxpRUFDRSx1QkFBdUIsQ0FBRSxDQUFFRixNQUFNLENBQUVILE9BQU8sQ0FBQ00sYUFBbEIsQ0FEM0IsRUFGRixDQXhDRixDQURGLENBREYsQ0FtREQsQ0E1REQsQ0E4RGVDLHVIQUFPLENBQUNqQixLQUFELENBQXRCLEVBRUEsR0FBTWtCLFVBQVMsazZGQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0UGVvcGxlLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQWJvdXQgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyXHJcbiAgICAgICAgY2xhc3NOYW1lPVwicGVvcGxlXCJcclxuICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICBtYXJnaW46IDEwdnc7XHJcblxyXG4gICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogaW5pdGlhbDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBhIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHN0YXRpYztcclxuICAgICAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgcDpudGgtb2YtdHlwZSgxKSB7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAzdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogM3Z3O1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIGB9XHJcbiAgICAgID5cclxuICAgICAgICA8ZGl2PlxyXG4gICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQucG9ydHJhaXRfMX0gLz5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uXzEgfX1cclxuICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdj5cclxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LnBvcnRyYWl0XzJ9IC8+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoQWJvdXQpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBgO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/AboutPeople.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/AboutTop.js":
/*!****************************************************!*\
  !*** ./packages/rounda/src/components/AboutTop.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1iw13ks-About\",styles:\"display:flex;flex-direction:row;@media only screen and (max-width:768px){flex-direction:column;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWtDa0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"1p2l0fg-About\",styles:\"margin-left:5vw;margin-right:10vw;width:40%;@media only screen and (max-width:768px){width:60%;margin-right:0;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRDb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"13phh5b-About\",styles:\"overflow:hidden;margin-right:5vw;width:100vw;height:100vw;max-width:440px;max-height:446px;@media only screen and (max-width:768px){margin-right:0;width:80vw;align-self:center;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBEb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBFK0MiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref5= false?undefined:{name:\"1qqoewy-About\",styles:\"display:grid;grid-template-columns:640px;grid-template-rows:auto auto;margin-top:20vh;margin-bottom:20vh;margin-left:5vw;@media only screen and (max-width:768px){margin-left:0;grid-template-columns:1fr;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXFGa0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref6= false?undefined:{name:\"nyfqnw-About\",styles:\"@media only screen and (max-width:768px){width:70%;margin-left:5vw;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW9Hb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref7= false?undefined:{name:\"10q0wwr-About\",styles:\"pointer-events:none;overflow:hidden;width:100%;height:100vw;max-width:640px;max-height:346px;@media only screen and (max-width:768px){justify-self:center;max-width:100%;};label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThHb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref8= false?undefined:{name:\"1sc845k-About\",styles:\"width:100%;height:100%;position:relative;;label:About;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRIK0MiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var About=(_ref9)=>{var{state}=_ref9;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nvar topSection=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);var pinTheSection=()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"].create({trigger:[topSection.current],start:\"bottom bottom\",pin:true,pinSpacing:false});};Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{pinTheSection();},[]);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"top\",ref:topSection},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{css:_ref2},content.title_1),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref3},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_1,type:\"video/mp4\"})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref5},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{css:_ref6},content.title_2),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref7},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,css:_ref8},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.animation_2,type:\"video/mp4\"}))))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e10egvbw0\",label:\"Container\"})( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0Fib3V0VG9wLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTRJNEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl19 */\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanM/NDU3OSJdLCJuYW1lcyI6WyJnc2FwIiwicmVnaXN0ZXJQbHVnaW4iLCJTY3JvbGxUcmlnZ2VyIiwiQWJvdXQiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZSIsInR5cGUiLCJpZCIsImNvbnRlbnQiLCJhY2YiLCJ0b3BTZWN0aW9uIiwidXNlUmVmIiwicGluVGhlU2VjdGlvbiIsImNyZWF0ZSIsInRyaWdnZXIiLCJjdXJyZW50Iiwic3RhcnQiLCJwaW4iLCJwaW5TcGFjaW5nIiwidXNlRWZmZWN0IiwidGl0bGVfMSIsImFuaW1hdGlvbl8xIiwidGl0bGVfMiIsImFuaW1hdGlvbl8yIiwiY29ubmVjdCIsIkNvbnRhaW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FSQUlBQSw0Q0FBSSxDQUFDQyxjQUFMLENBQW9CQyxnRUFBcEIsRSxpcjhDQUVBLEdBQU1DLE1BQUssQ0FBRyxTQUFlLElBQWQsQ0FBRUMsS0FBRixDQUFjLE9BQzNCO0FBQ0EsR0FBTUMsS0FBSSxDQUFHRCxLQUFLLENBQUNFLE1BQU4sQ0FBYUMsR0FBYixDQUFpQkgsS0FBSyxDQUFDSSxNQUFOLENBQWFDLElBQTlCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLEtBQUksQ0FBR04sS0FBSyxDQUFDRSxNQUFOLENBQWFELElBQUksQ0FBQ00sSUFBbEIsRUFBd0JOLElBQUksQ0FBQ08sRUFBN0IsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsUUFBTyxDQUFHSCxJQUFJLENBQUNJLEdBQXJCLENBQ0E7QUFFQSxHQUFNQyxXQUFVLENBQUdDLG9EQUFNLENBQUMsSUFBRCxDQUF6QixDQUVBLEdBQU1DLGNBQWEsQ0FBRyxJQUFNLENBQzFCZixnRUFBYSxDQUFDZ0IsTUFBZCxDQUFxQixDQUNuQkMsT0FBTyxDQUFFLENBQUNKLFVBQVUsQ0FBQ0ssT0FBWixDQURVLENBRW5CQyxLQUFLLENBQUUsZUFGWSxDQUduQkMsR0FBRyxDQUFFLElBSGMsQ0FJbkJDLFVBQVUsQ0FBRSxLQUpPLENBQXJCLEVBTUQsQ0FQRCxDQVNBQyx1REFBUyxDQUFDLElBQU0sQ0FDZFAsYUFBYSxHQUNkLENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQSxNQUNFLHNIQUNFLDBEQUFDLFNBQUQsRUFBVyxTQUFTLENBQUMsS0FBckIsQ0FBMkIsR0FBRyxDQUFFRixVQUFoQyxFQUNFLGlFQUNFLEdBQUcsS0FETCxFQVVFLCtEQUNFLEdBQUcsTUFETCxFQVlHRixPQUFPLENBQUNZLE9BWlgsQ0FWRixDQXdCRSxpRUFDRSxHQUFHLE1BREwsRUFpQkUsbUVBQU8sUUFBUSxLQUFmLENBQWdCLElBQUksS0FBcEIsQ0FBcUIsS0FBSyxLQUExQixDQUEyQixHQUFHLE1BQTlCLEVBS1Ysb0VBQVEsR0FBRyxDQUFFWixPQUFPLENBQUNhLFdBQXJCLENBQWtDLElBQUksQ0FBQyxXQUF2QyxFQUxVLENBakJGLENBeEJGLENBREYsQ0FvREUsaUVBQ0UsR0FBRyxNQURMLEVBZUUsK0RBQ0UsR0FBRyxNQURMLEVBUUdiLE9BQU8sQ0FBQ2MsT0FSWCxDQWZGLENBeUJFLGlFQUNFLEdBQUcsTUFETCxFQWVFLG1FQUFPLFFBQVEsS0FBZixDQUFnQixJQUFJLEtBQXBCLENBQXFCLEtBQUssS0FBMUIsQ0FBMkIsR0FBRyxNQUE5QixFQUtWLG9FQUFRLEdBQUcsQ0FBRWQsT0FBTyxDQUFDZSxXQUFyQixDQUFrQyxJQUFJLENBQUMsV0FBdkMsRUFMVSxDQWZGLENBekJGLENBcERGLENBREYsQ0FERixDQTBHRCxDQWxJRCxDQW9JZUMsdUhBQU8sQ0FBQzFCLEtBQUQsQ0FBdEIsRUFFQSxHQUFNMkIsVUFBUyxtckxBQWYiLCJmaWxlIjoiLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvQWJvdXRUb3AuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgY3NzLCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB0b3BTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbdG9wU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIGNsYXNzTmFtZT1cInRvcFwiIHJlZj17dG9wU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8cFxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1yaWdodDogMTB2dztcclxuICAgICAgICAgICAgICB3aWR0aDogNDAlO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogNjAlO1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMX1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgLyogcG9pbnRlci1ldmVudHM6IG5vbmU7ICovXHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgaGVpZ2h0OiAxMDB2dztcclxuICAgICAgICAgICAgICBtYXgtd2lkdGg6IDQ0MHB4O1xyXG4gICAgICAgICAgICAgIG1heC1oZWlnaHQ6IDQ0NnB4O1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuYW5pbWF0aW9uXzF9IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNjQwcHg7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogYXV0byBhdXRvO1xyXG4gICAgICAgICAgICBtYXJnaW4tdG9wOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHZoO1xyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwO1xyXG4gICAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxwXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA3MCU7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tbGVmdDogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAge2NvbnRlbnQudGl0bGVfMn1cclxuICAgICAgICAgIDwvcD5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICBoZWlnaHQ6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgIG1heC13aWR0aDogNjQwcHg7XHJcbiAgICAgICAgICAgICAgbWF4LWhlaWdodDogMzQ2cHg7XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICAgIGp1c3RpZnktc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5hbmltYXRpb25fMn0gdHlwZT1cInZpZGVvL21wNFwiLz5cclxuPC92aWRlbz5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgYDtcclxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/AboutTop.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/FirstLayer.js":
/*!******************************************************!*\
  !*** ./packages/rounda/src/components/FirstLayer.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1vi3moj-FirstLayer\",styles:\"position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1;pointer-events:none;overflow:hidden;;label:FirstLayer;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0ZpcnN0TGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBa0NrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9GaXJzdExheWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBGaXJzdExheWVyID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB2aWRlb1NlY3Rpb24gPSB1c2VSZWYobnVsbCk7XHJcblxyXG4gIGNvbnN0IHBpblRoZVNlY3Rpb24gPSAoKSA9PiB7XHJcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XHJcbiAgICAgIHRyaWdnZXI6IFt2aWRlb1NlY3Rpb24uY3VycmVudF0sXHJcbiAgICAgIHN0YXJ0OiBcInRvcCB0b3BcIixcclxuICAgICAgcGluOiB0cnVlLFxyXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBwaW5UaGVTZWN0aW9uKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciByZWY9e3ZpZGVvU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1Ni4yNXZ3O1xyXG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDE3Ny43N3ZoOyBcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuaW50cm9kdWN0aW9uX3ZpZGVvfSB0eXBlPVwidmlkZW8vbXA0XCIvPlxyXG48L3ZpZGVvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEZpcnN0TGF5ZXIpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"qmf474-FirstLayer\",styles:\"width:100vw;height:56.25vw;min-height:100vh;min-width:177.77vh;position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);;label:FirstLayer;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0ZpcnN0TGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNkM2QyIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9GaXJzdExheWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBGaXJzdExheWVyID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB2aWRlb1NlY3Rpb24gPSB1c2VSZWYobnVsbCk7XHJcblxyXG4gIGNvbnN0IHBpblRoZVNlY3Rpb24gPSAoKSA9PiB7XHJcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XHJcbiAgICAgIHRyaWdnZXI6IFt2aWRlb1NlY3Rpb24uY3VycmVudF0sXHJcbiAgICAgIHN0YXJ0OiBcInRvcCB0b3BcIixcclxuICAgICAgcGluOiB0cnVlLFxyXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBwaW5UaGVTZWN0aW9uKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciByZWY9e3ZpZGVvU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1Ni4yNXZ3O1xyXG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDE3Ny43N3ZoOyBcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuaW50cm9kdWN0aW9uX3ZpZGVvfSB0eXBlPVwidmlkZW8vbXA0XCIvPlxyXG48L3ZpZGVvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEZpcnN0TGF5ZXIpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var FirstLayer=(_ref3)=>{var{state}=_ref3;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nvar videoSection=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);var pinTheSection=()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"].create({trigger:[videoSection.current],start:\"top top\",pin:true,pinSpacing:false});};Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{pinTheSection();},[]);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{ref:videoSection},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,css:_ref2},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"source\",{src:content.introduction_video,type:\"video/mp4\"})))));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(FirstLayer));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1ij7nkt0\",label:\"Container\"})( false?undefined:{name:\"mikc7i\",styles:\"width:100%;height:100vh;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0ZpcnN0TGF5ZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUU0QiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9GaXJzdExheWVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBGaXJzdExheWVyID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCB2aWRlb1NlY3Rpb24gPSB1c2VSZWYobnVsbCk7XHJcblxyXG4gIGNvbnN0IHBpblRoZVNlY3Rpb24gPSAoKSA9PiB7XHJcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XHJcbiAgICAgIHRyaWdnZXI6IFt2aWRlb1NlY3Rpb24uY3VycmVudF0sXHJcbiAgICAgIHN0YXJ0OiBcInRvcCB0b3BcIixcclxuICAgICAgcGluOiB0cnVlLFxyXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBwaW5UaGVTZWN0aW9uKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciByZWY9e3ZpZGVvU2VjdGlvbn0+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgdG9wOiAwO1xyXG4gICAgICAgICAgICBsZWZ0OiAwO1xyXG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgICAgICAgICB6LWluZGV4OiAtMTtcclxuICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMHZ3O1xyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA1Ni4yNXZ3O1xyXG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICAgICAgICBtaW4td2lkdGg6IDE3Ny43N3ZoOyBcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xyXG4gICAgICAgICAgICAgICAgbGVmdDogNTAlO1xyXG4gICAgICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XHJcbiAgICAgICAgICAgICAgYH0+XHJcbiAgPHNvdXJjZSBzcmM9e2NvbnRlbnQuaW50cm9kdWN0aW9uX3ZpZGVvfSB0eXBlPVwidmlkZW8vbXA0XCIvPlxyXG48L3ZpZGVvPlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEZpcnN0TGF5ZXIpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG5gO1xyXG4iXX0= */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvRmlyc3RMYXllci5qcz9lMjQxIl0sIm5hbWVzIjpbImdzYXAiLCJyZWdpc3RlclBsdWdpbiIsIlNjcm9sbFRyaWdnZXIiLCJGaXJzdExheWVyIiwic3RhdGUiLCJkYXRhIiwic291cmNlIiwiZ2V0Iiwicm91dGVyIiwibGluayIsInBhZ2UiLCJ0eXBlIiwiaWQiLCJjb250ZW50IiwiYWNmIiwidmlkZW9TZWN0aW9uIiwidXNlUmVmIiwicGluVGhlU2VjdGlvbiIsImNyZWF0ZSIsInRyaWdnZXIiLCJjdXJyZW50Iiwic3RhcnQiLCJwaW4iLCJwaW5TcGFjaW5nIiwidXNlRWZmZWN0IiwiaW50cm9kdWN0aW9uX3ZpZGVvIiwiY29ubmVjdCIsIkNvbnRhaW5lciJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O3FSQUlBQSw0Q0FBSSxDQUFDQyxjQUFMLENBQW9CQyxnRUFBcEIsRSxrcE1BRUEsR0FBTUMsV0FBVSxDQUFHLFNBQWUsSUFBZCxDQUFFQyxLQUFGLENBQWMsT0FDaEM7QUFDQSxHQUFNQyxLQUFJLENBQUdELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxHQUFiLENBQWlCSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHTixLQUFLLENBQUNFLE1BQU4sQ0FBYUQsSUFBSSxDQUFDTSxJQUFsQixFQUF3Qk4sSUFBSSxDQUFDTyxFQUE3QixDQUFiLENBQ0E7QUFDQSxHQUFNQyxRQUFPLENBQUdILElBQUksQ0FBQ0ksR0FBckIsQ0FDQTtBQUVBLEdBQU1DLGFBQVksQ0FBR0Msb0RBQU0sQ0FBQyxJQUFELENBQTNCLENBRUEsR0FBTUMsY0FBYSxDQUFHLElBQU0sQ0FDMUJmLGdFQUFhLENBQUNnQixNQUFkLENBQXFCLENBQ25CQyxPQUFPLENBQUUsQ0FBQ0osWUFBWSxDQUFDSyxPQUFkLENBRFUsQ0FFbkJDLEtBQUssQ0FBRSxTQUZZLENBR25CQyxHQUFHLENBQUUsSUFIYyxDQUluQkMsVUFBVSxDQUFFLEtBSk8sQ0FBckIsRUFNRCxDQVBELENBU0FDLHVEQUFTLENBQUMsSUFBTSxDQUNkUCxhQUFhLEdBQ2QsQ0FGUSxDQUVOLEVBRk0sQ0FBVCxDQUlBLE1BQ0Usc0hBQ0UsMERBQUMsU0FBRCxFQUFXLEdBQUcsQ0FBRUYsWUFBaEIsRUFDRSxpRUFDRSxHQUFHLEtBREwsRUFZRSxtRUFBTyxRQUFRLEtBQWYsQ0FBZ0IsSUFBSSxLQUFwQixDQUFxQixLQUFLLEtBQTFCLENBQTJCLEdBQUcsTUFBOUIsRUFVUixvRUFBUSxHQUFHLENBQUVGLE9BQU8sQ0FBQ1ksa0JBQXJCLENBQXlDLElBQUksQ0FBQyxXQUE5QyxFQVZRLENBWkYsQ0FERixDQURGLENBREYsQ0ErQkQsQ0F2REQsQ0F5RGVDLHVIQUFPLENBQUN2QixVQUFELENBQXRCLEVBRUEsR0FBTXdCLFVBQVMsMmpHQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL0ZpcnN0TGF5ZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkLCBjc3MgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuXHJcbmNvbnN0IEZpcnN0TGF5ZXIgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcclxuXHJcbiAgY29uc3QgcGluVGhlU2VjdGlvbiA9ICgpID0+IHtcclxuICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcclxuICAgICAgdHJpZ2dlcjogW3ZpZGVvU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIHJlZj17dmlkZW9TZWN0aW9ufT5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDA7XHJcbiAgICAgICAgICAgIGxlZnQ6IDA7XHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgICAgICAgIHotaW5kZXg6IC0xO1xyXG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgICAgICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPHZpZGVvIGF1dG9QbGF5IGxvb3AgbXV0ZWQgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMTAwdnc7XHJcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XHJcbiAgICAgICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgICAgIG1pbi13aWR0aDogMTc3Ljc3dmg7IFxyXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICAgICAgdG9wOiA1MCU7XHJcbiAgICAgICAgICAgICAgICBsZWZ0OiA1MCU7XHJcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcclxuICAgICAgICAgICAgICBgfT5cclxuICA8c291cmNlIHNyYz17Y29udGVudC5pbnRyb2R1Y3Rpb25fdmlkZW99IHR5cGU9XCJ2aWRlby9tcDRcIi8+XHJcbjwvdmlkZW8+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoRmlyc3RMYXllcik7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQuZGl2YFxyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwdmg7XHJcbmA7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/FirstLayer.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/about.js":
/*!*************************************************!*\
  !*** ./packages/rounda/src/components/about.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var _AboutTop__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AboutTop */ \"./packages/rounda/src/components/AboutTop.js\");\n/* harmony import */ var _AboutBlack__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./AboutBlack */ \"./packages/rounda/src/components/AboutBlack.js\");\n/* harmony import */ var _AboutPeople__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AboutPeople */ \"./packages/rounda/src/components/AboutPeople.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./footer */ \"./packages/rounda/src/components/footer.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_4__[\"ScrollTrigger\"]);var About=(_ref)=>{var{state}=_ref;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(Container,{className:\"main\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_AboutTop__WEBPACK_IMPORTED_MODULE_5__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_AboutBlack__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_AboutPeople__WEBPACK_IMPORTED_MODULE_7__[\"default\"],null)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_9__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_8__[\"default\"],null));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(About));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"main\",{target:\"e1tbzk380\",label:\"Container\"})( false?undefined:{name:\"b0pvtv\",styles:\"display:flex;flex-direction:column;padding-top:15vh;background-color:#e7e9f2;font-size:20px;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2Fib3V0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlDNkIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvYWJvdXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5pbXBvcnQgQWJvdXRUb3AgZnJvbSBcIi4vQWJvdXRUb3BcIjtcclxuaW1wb3J0IEFib3V0QmxhY2sgZnJvbSBcIi4vQWJvdXRCbGFja1wiO1xyXG5pbXBvcnQgQWJvdXRQZW9wbGUgZnJvbSBcIi4vQWJvdXRQZW9wbGVcIjtcclxuaW1wb3J0IEZvb3RlciBmcm9tIFwiLi9mb290ZXJcIjtcclxuXHJcbmNvbnN0IEFib3V0ID0gKHsgc3RhdGUgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPEFib3V0VG9wIC8+XHJcbiAgICAgICAgPEFib3V0QmxhY2sgLz5cclxuICAgICAgICA8QWJvdXRQZW9wbGUgLz5cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICAgIDxGb290ZXIgLz5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFib3V0KTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5tYWluYFxyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvYWJvdXQuanM/OTlmZCJdLCJuYW1lcyI6WyJnc2FwIiwicmVnaXN0ZXJQbHVnaW4iLCJTY3JvbGxUcmlnZ2VyIiwiQWJvdXQiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZSIsInR5cGUiLCJpZCIsImNvbnRlbnQiLCJhY2YiLCJjb25uZWN0IiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O3FSQUlBQSw0Q0FBSSxDQUFDQyxjQUFMLENBQW9CQyxnRUFBcEIsRUFNQSxHQUFNQyxNQUFLLENBQUcsUUFBZSxJQUFkLENBQUVDLEtBQUYsQ0FBYyxNQUMzQjtBQUNBLEdBQU1DLEtBQUksQ0FBR0QsS0FBSyxDQUFDRSxNQUFOLENBQWFDLEdBQWIsQ0FBaUJILEtBQUssQ0FBQ0ksTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0E7QUFDQSxHQUFNQyxLQUFJLENBQUdOLEtBQUssQ0FBQ0UsTUFBTixDQUFhRCxJQUFJLENBQUNNLElBQWxCLEVBQXdCTixJQUFJLENBQUNPLEVBQTdCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLFFBQU8sQ0FBR0gsSUFBSSxDQUFDSSxHQUFyQixDQUNBO0FBRUEsTUFDRSxzSEFDRSwwREFBQyxTQUFELEVBQVcsU0FBUyxDQUFDLE1BQXJCLEVBQ0UsMERBQUMsaURBQUQsTUFERixDQUVFLDBEQUFDLG1EQUFELE1BRkYsQ0FHRSwwREFBQyxvREFBRCxNQUhGLENBREYsQ0FNRSwwREFBQywrQ0FBRCxNQU5GLENBREYsQ0FVRCxDQW5CRCxDQXFCZUMsdUhBQU8sQ0FBQ1osS0FBRCxDQUF0QixFQUVBLEdBQU1hLFVBQVMsNG1FQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2Fib3V0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQgfSBmcm9tIFwiZnJvbnRpdHlcIjtcclxuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcclxuaW1wb3J0IHsgU2Nyb2xsVHJpZ2dlciB9IGZyb20gXCJnc2FwL1Njcm9sbFRyaWdnZXJcIjtcclxuZ3NhcC5yZWdpc3RlclBsdWdpbihTY3JvbGxUcmlnZ2VyKTtcclxuaW1wb3J0IEFib3V0VG9wIGZyb20gXCIuL0Fib3V0VG9wXCI7XHJcbmltcG9ydCBBYm91dEJsYWNrIGZyb20gXCIuL0Fib3V0QmxhY2tcIjtcclxuaW1wb3J0IEFib3V0UGVvcGxlIGZyb20gXCIuL0Fib3V0UGVvcGxlXCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcblxyXG5jb25zdCBBYm91dCA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwibWFpblwiPlxyXG4gICAgICAgIDxBYm91dFRvcCAvPlxyXG4gICAgICAgIDxBYm91dEJsYWNrIC8+XHJcbiAgICAgICAgPEFib3V0UGVvcGxlIC8+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChBYm91dCk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbmA7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/about.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/animationSection.js":
/*!************************************************************!*\
  !*** ./packages/rounda/src/components/animationSection.js ***!
  \************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_4__[\"ScrollTrigger\"]);var AnimationSection=(_ref)=>{var{state,actions}=_ref;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar post=state.source[data.type][data.id];//console.log(post);\nvar content=post.acf;//console.log(content);\nvar animationSection=Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useRef\"])(null);var pinTheSection=()=>{/* footer gets pinned from the very beginning */gsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].to([animationSection.current],{position:\"fixed\",scrollTrigger:{trigger:\".firstSection\",start:\"top top\",//end: \"+=100%\",\nscrub:true}});gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_4__[\"ScrollTrigger\"].create({trigger:[animationSection.current],start:\"top top\",//end: \"bottom top\",\npin:true,pinSpacing:false,scrub:true});gsap__WEBPACK_IMPORTED_MODULE_3__[\"default\"].to([animationSection.current.children],{yPercent:-50,ease:\"none\",scrollTrigger:{trigger:[animationSection.current],//start: \"top bottom\",\nscrub:true}});};Object(react__WEBPACK_IMPORTED_MODULE_1__[\"useEffect\"])(()=>{pinTheSection();},[]);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(Container,{ref:animationSection},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_5__[\"jsx\"])(\"img\",{src:content.animation})));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(AnimationSection));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"ekgkogd0\",label:\"Container\"})( false?undefined:{name:\"4xaub6\",styles:\"height:100vh;background-color:#0f143c;display:flex;justify-content:center;align-items:center;width:100%;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2FuaW1hdGlvblNlY3Rpb24uanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUU0QiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9hbmltYXRpb25TZWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5cclxuY29uc3QgQW5pbWF0aW9uU2VjdGlvbiA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwb3N0ID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwb3N0KTtcclxuICBjb25zdCBjb250ZW50ID0gcG9zdC5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgY29uc3QgYW5pbWF0aW9uU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcclxuXHJcbiAgY29uc3QgcGluVGhlU2VjdGlvbiA9ICgpID0+IHtcclxuICAgIC8qIGZvb3RlciBnZXRzIHBpbm5lZCBmcm9tIHRoZSB2ZXJ5IGJlZ2lubmluZyAqL1xyXG5cclxuICAgIGdzYXAudG8oW2FuaW1hdGlvblNlY3Rpb24uY3VycmVudF0sIHtcclxuICAgICAgcG9zaXRpb246IFwiZml4ZWRcIixcclxuICAgICAgc2Nyb2xsVHJpZ2dlcjoge1xyXG4gICAgICAgIHRyaWdnZXI6IFwiLmZpcnN0U2VjdGlvblwiLFxyXG4gICAgICAgIHN0YXJ0OiBcInRvcCB0b3BcIixcclxuICAgICAgICAvL2VuZDogXCIrPTEwMCVcIixcclxuICAgICAgICBzY3J1YjogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG5cclxuICAgIFNjcm9sbFRyaWdnZXIuY3JlYXRlKHtcclxuICAgICAgdHJpZ2dlcjogW2FuaW1hdGlvblNlY3Rpb24uY3VycmVudF0sXHJcbiAgICAgIHN0YXJ0OiBcInRvcCB0b3BcIixcclxuICAgICAgLy9lbmQ6IFwiYm90dG9tIHRvcFwiLFxyXG4gICAgICBwaW46IHRydWUsXHJcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxyXG4gICAgICBzY3J1YjogdHJ1ZSxcclxuICAgIH0pO1xyXG5cclxuICAgIGdzYXAudG8oW2FuaW1hdGlvblNlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcclxuICAgICAgeVBlcmNlbnQ6IC01MCxcclxuICAgICAgZWFzZTogXCJub25lXCIsXHJcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcclxuICAgICAgICB0cmlnZ2VyOiBbYW5pbWF0aW9uU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgICAvL3N0YXJ0OiBcInRvcCBib3R0b21cIixcclxuICAgICAgICBzY3J1YjogdHJ1ZSxcclxuICAgICAgfSxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICBwaW5UaGVTZWN0aW9uKCk7XHJcbiAgfSwgW10pO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciByZWY9e2FuaW1hdGlvblNlY3Rpb259PlxyXG4gICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmFuaW1hdGlvbn0gLz5cclxuICAgICAgPC9Db250YWluZXI+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChBbmltYXRpb25TZWN0aW9uKTtcclxuXHJcbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGYxNDNjO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvYW5pbWF0aW9uU2VjdGlvbi5qcz9lZWU5Il0sIm5hbWVzIjpbImdzYXAiLCJyZWdpc3RlclBsdWdpbiIsIlNjcm9sbFRyaWdnZXIiLCJBbmltYXRpb25TZWN0aW9uIiwic3RhdGUiLCJhY3Rpb25zIiwiZGF0YSIsInNvdXJjZSIsImdldCIsInJvdXRlciIsImxpbmsiLCJwb3N0IiwidHlwZSIsImlkIiwiY29udGVudCIsImFjZiIsImFuaW1hdGlvblNlY3Rpb24iLCJ1c2VSZWYiLCJwaW5UaGVTZWN0aW9uIiwidG8iLCJjdXJyZW50IiwicG9zaXRpb24iLCJzY3JvbGxUcmlnZ2VyIiwidHJpZ2dlciIsInN0YXJ0Iiwic2NydWIiLCJjcmVhdGUiLCJwaW4iLCJwaW5TcGFjaW5nIiwiY2hpbGRyZW4iLCJ5UGVyY2VudCIsImVhc2UiLCJ1c2VFZmZlY3QiLCJhbmltYXRpb24iLCJjb25uZWN0IiwiQ29udGFpbmVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7cVJBSUFBLDRDQUFJLENBQUNDLGNBQUwsQ0FBb0JDLGdFQUFwQixFQUVBLEdBQU1DLGlCQUFnQixDQUFHLFFBQXdCLElBQXZCLENBQUVDLEtBQUYsQ0FBU0MsT0FBVCxDQUF1QixNQUMvQztBQUNBLEdBQU1DLEtBQUksQ0FBR0YsS0FBSyxDQUFDRyxNQUFOLENBQWFDLEdBQWIsQ0FBaUJKLEtBQUssQ0FBQ0ssTUFBTixDQUFhQyxJQUE5QixDQUFiLENBQ0E7QUFDQSxHQUFNQyxLQUFJLENBQUdQLEtBQUssQ0FBQ0csTUFBTixDQUFhRCxJQUFJLENBQUNNLElBQWxCLEVBQXdCTixJQUFJLENBQUNPLEVBQTdCLENBQWIsQ0FDQTtBQUNBLEdBQU1DLFFBQU8sQ0FBR0gsSUFBSSxDQUFDSSxHQUFyQixDQUNBO0FBRUEsR0FBTUMsaUJBQWdCLENBQUdDLG9EQUFNLENBQUMsSUFBRCxDQUEvQixDQUVBLEdBQU1DLGNBQWEsQ0FBRyxJQUFNLENBQzFCLGdEQUVBbEIsNENBQUksQ0FBQ21CLEVBQUwsQ0FBUSxDQUFDSCxnQkFBZ0IsQ0FBQ0ksT0FBbEIsQ0FBUixDQUFvQyxDQUNsQ0MsUUFBUSxDQUFFLE9BRHdCLENBRWxDQyxhQUFhLENBQUUsQ0FDYkMsT0FBTyxDQUFFLGVBREksQ0FFYkMsS0FBSyxDQUFFLFNBRk0sQ0FHYjtBQUNBQyxLQUFLLENBQUUsSUFKTSxDQUZtQixDQUFwQyxFQVVBdkIsZ0VBQWEsQ0FBQ3dCLE1BQWQsQ0FBcUIsQ0FDbkJILE9BQU8sQ0FBRSxDQUFDUCxnQkFBZ0IsQ0FBQ0ksT0FBbEIsQ0FEVSxDQUVuQkksS0FBSyxDQUFFLFNBRlksQ0FHbkI7QUFDQUcsR0FBRyxDQUFFLElBSmMsQ0FLbkJDLFVBQVUsQ0FBRSxLQUxPLENBTW5CSCxLQUFLLENBQUUsSUFOWSxDQUFyQixFQVNBekIsNENBQUksQ0FBQ21CLEVBQUwsQ0FBUSxDQUFDSCxnQkFBZ0IsQ0FBQ0ksT0FBakIsQ0FBeUJTLFFBQTFCLENBQVIsQ0FBNkMsQ0FDM0NDLFFBQVEsQ0FBRSxDQUFDLEVBRGdDLENBRTNDQyxJQUFJLENBQUUsTUFGcUMsQ0FHM0NULGFBQWEsQ0FBRSxDQUNiQyxPQUFPLENBQUUsQ0FBQ1AsZ0JBQWdCLENBQUNJLE9BQWxCLENBREksQ0FFYjtBQUNBSyxLQUFLLENBQUUsSUFITSxDQUg0QixDQUE3QyxFQVNELENBL0JELENBaUNBTyx1REFBUyxDQUFDLElBQU0sQ0FDZGQsYUFBYSxHQUNkLENBRlEsQ0FFTixFQUZNLENBQVQsQ0FJQSxNQUNFLHNIQUNFLDBEQUFDLFNBQUQsRUFBVyxHQUFHLENBQUVGLGdCQUFoQixFQUNFLGlFQUFLLEdBQUcsQ0FBRUYsT0FBTyxDQUFDbUIsU0FBbEIsRUFERixDQURGLENBREYsQ0FPRCxDQXZERCxDQXlEZUMsdUhBQU8sQ0FBQy9CLGdCQUFELENBQXRCLEVBRUEsR0FBTWdDLFVBQVMsMHNHQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2FuaW1hdGlvblNlY3Rpb24uanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlRWZmZWN0LCB1c2VSZWYgfSBmcm9tIFwicmVhY3RcIjtcclxuaW1wb3J0IHsgY29ubmVjdCwgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBBbmltYXRpb25TZWN0aW9uID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICBjb25zdCBhbmltYXRpb25TZWN0aW9uID0gdXNlUmVmKG51bGwpO1xyXG5cclxuICBjb25zdCBwaW5UaGVTZWN0aW9uID0gKCkgPT4ge1xyXG4gICAgLyogZm9vdGVyIGdldHMgcGlubmVkIGZyb20gdGhlIHZlcnkgYmVnaW5uaW5nICovXHJcblxyXG4gICAgZ3NhcC50byhbYW5pbWF0aW9uU2VjdGlvbi5jdXJyZW50XSwge1xyXG4gICAgICBwb3NpdGlvbjogXCJmaXhlZFwiLFxyXG4gICAgICBzY3JvbGxUcmlnZ2VyOiB7XHJcbiAgICAgICAgdHJpZ2dlcjogXCIuZmlyc3RTZWN0aW9uXCIsXHJcbiAgICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxyXG4gICAgICAgIC8vZW5kOiBcIis9MTAwJVwiLFxyXG4gICAgICAgIHNjcnViOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcblxyXG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xyXG4gICAgICB0cmlnZ2VyOiBbYW5pbWF0aW9uU2VjdGlvbi5jdXJyZW50XSxcclxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxyXG4gICAgICAvL2VuZDogXCJib3R0b20gdG9wXCIsXHJcbiAgICAgIHBpbjogdHJ1ZSxcclxuICAgICAgcGluU3BhY2luZzogZmFsc2UsXHJcbiAgICAgIHNjcnViOiB0cnVlLFxyXG4gICAgfSk7XHJcblxyXG4gICAgZ3NhcC50byhbYW5pbWF0aW9uU2VjdGlvbi5jdXJyZW50LmNoaWxkcmVuXSwge1xyXG4gICAgICB5UGVyY2VudDogLTUwLFxyXG4gICAgICBlYXNlOiBcIm5vbmVcIixcclxuICAgICAgc2Nyb2xsVHJpZ2dlcjoge1xyXG4gICAgICAgIHRyaWdnZXI6IFthbmltYXRpb25TZWN0aW9uLmN1cnJlbnRdLFxyXG4gICAgICAgIC8vc3RhcnQ6IFwidG9wIGJvdHRvbVwiLFxyXG4gICAgICAgIHNjcnViOiB0cnVlLFxyXG4gICAgICB9LFxyXG4gICAgfSk7XHJcbiAgfTtcclxuXHJcbiAgdXNlRWZmZWN0KCgpID0+IHtcclxuICAgIHBpblRoZVNlY3Rpb24oKTtcclxuICB9LCBbXSk7XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8PlxyXG4gICAgICA8Q29udGFpbmVyIHJlZj17YW5pbWF0aW9uU2VjdGlvbn0+XHJcbiAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuYW5pbWF0aW9ufSAvPlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgIDwvPlxyXG4gICk7XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KEFuaW1hdGlvblNlY3Rpb24pO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLmRpdmBcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwZjE0M2M7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG5gO1xyXG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/animationSection.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/empty.js":
false,

/***/ "./packages/rounda/src/components/index.js":
/*!*************************************************!*\
  !*** ./packages/rounda/src/components/index.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @frontity/components/switch */ \"./node_modules/@frontity/components/switch.tsx\");\n/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./header */ \"./packages/rounda/src/components/header.js\");\n/* harmony import */ var _home__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./home */ \"./packages/rounda/src/components/home.js\");\n/* harmony import */ var _works__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./works */ \"./packages/rounda/src/components/works.js\");\n/* harmony import */ var _about__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./about */ \"./packages/rounda/src/components/about.js\");\n/* harmony import */ var _services__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./services */ \"./packages/rounda/src/components/services.js\");\n/* harmony import */ var _singleWork__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./singleWork */ \"./packages/rounda/src/components/singleWork.js\");\n/* harmony import */ var _preloader__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./preloader */ \"./packages/rounda/src/components/preloader.js\");\n/* harmony import */ var react_spring__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! react-spring */ \"./node_modules/react-spring/web.js\");\n/* harmony import */ var _fonts_gangstergrotesk_regular_ttf__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../fonts/gangstergrotesk-regular.ttf */ \"./packages/rounda/src/fonts/gangstergrotesk-regular.ttf\");\n/* harmony import */ var _fonts_gangstergrotesk_regular_ttf__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_fonts_gangstergrotesk_regular_ttf__WEBPACK_IMPORTED_MODULE_12__);\n/* harmony import */ var _fonts_gangstergrotesk_light_ttf__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../fonts/gangstergrotesk-light.ttf */ \"./packages/rounda/src/fonts/gangstergrotesk-light.ttf\");\n/* harmony import */ var _fonts_gangstergrotesk_light_ttf__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_fonts_gangstergrotesk_light_ttf__WEBPACK_IMPORTED_MODULE_13__);\n/* harmony import */ var _images_favicon_apple_touch_icon_png__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../images/favicon/apple-touch-icon.png */ \"./packages/rounda/src/images/favicon/apple-touch-icon.png\");\n/* harmony import */ var _images_favicon_apple_touch_icon_png__WEBPACK_IMPORTED_MODULE_14___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_apple_touch_icon_png__WEBPACK_IMPORTED_MODULE_14__);\n/* harmony import */ var _images_favicon_favicon_32x32_png__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../images/favicon/favicon-32x32.png */ \"./packages/rounda/src/images/favicon/favicon-32x32.png\");\n/* harmony import */ var _images_favicon_favicon_32x32_png__WEBPACK_IMPORTED_MODULE_15___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_favicon_32x32_png__WEBPACK_IMPORTED_MODULE_15__);\n/* harmony import */ var _images_favicon_favicon_16x16_png__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../images/favicon/favicon-16x16.png */ \"./packages/rounda/src/images/favicon/favicon-16x16.png\");\n/* harmony import */ var _images_favicon_favicon_16x16_png__WEBPACK_IMPORTED_MODULE_16___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_favicon_16x16_png__WEBPACK_IMPORTED_MODULE_16__);\n/* harmony import */ var _images_favicon_safari_pinned_tab_svg__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../images/favicon/safari-pinned-tab.svg */ \"./packages/rounda/src/images/favicon/safari-pinned-tab.svg\");\n/* harmony import */ var _images_favicon_safari_pinned_tab_svg__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_images_favicon_safari_pinned_tab_svg__WEBPACK_IMPORTED_MODULE_17__);\n//import webManifest from \"../images/favicon/site.webmanifest\";\nvar Theme=(_ref)=>{var{state,actions}=_ref;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\n//const page = state.source[data.type][data.id];\n//console.log(page);\n//const content = page.acf;\n//console.log(content);\nvar pageTransitions=Object(react_spring__WEBPACK_IMPORTED_MODULE_11__[\"useTransition\"])(state.router.link,null,{config:{duration:500},from:{opacity:0},enter:{opacity:1},leave:{opacity:0,display:\"none\"}});return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(frontity__WEBPACK_IMPORTED_MODULE_2__[\"Head\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"title\",null,state.frontity.title),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"meta\",{name:\"description\",content:state.frontity.description}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"html\",{lang:\"en\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"link\",{rel:\"apple-touch-icon\",sizes:\"180x180\",href:_images_favicon_apple_touch_icon_png__WEBPACK_IMPORTED_MODULE_14___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"link\",{rel:\"icon\",type:\"image/png\",sizes:\"32x32\",href:_images_favicon_favicon_32x32_png__WEBPACK_IMPORTED_MODULE_15___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"link\",{rel:\"icon\",type:\"image/png\",sizes:\"16x16\",href:_images_favicon_favicon_16x16_png__WEBPACK_IMPORTED_MODULE_16___default.a}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"link\",{rel:\"mask-icon\",href:_images_favicon_safari_pinned_tab_svg__WEBPACK_IMPORTED_MODULE_17___default.a,color:\"#5bbad5\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"meta\",{name:\"msapplication-TileColor\",content:\"#ffc40d\"}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"meta\",{name:\"theme-color\",content:\"#ffffff\"})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"Global\"],{styles:globalStyles}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_header__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null),pageTransitions.map((_ref2)=>{var{props,key}=_ref2;return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(react_spring__WEBPACK_IMPORTED_MODULE_11__[\"animated\"].div,{style:props,key:key},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_frontity_components_switch__WEBPACK_IMPORTED_MODULE_3__[\"default\"],null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_home__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{when:data.isHome}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_works__WEBPACK_IMPORTED_MODULE_6__[\"default\"],{when:data.id==35&&data.isReady}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_about__WEBPACK_IMPORTED_MODULE_7__[\"default\"],{when:data.id==53&&data.isReady}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_services__WEBPACK_IMPORTED_MODULE_8__[\"default\"],{when:data.id==75&&data.isReady}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_singleWork__WEBPACK_IMPORTED_MODULE_9__[\"default\"],{when:data.isPost&&data.isReady}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(_preloader__WEBPACK_IMPORTED_MODULE_10__[\"default\"],{when:data.isFetching})));}));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Theme));var globalStyles=/*#__PURE__*/Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"css\"])(\"@font-face{font-family:\\\"gangsterRegular\\\";src:url(\",_fonts_gangstergrotesk_regular_ttf__WEBPACK_IMPORTED_MODULE_12___default.a,\");}@font-face{font-family:\\\"gangsterLight\\\";src:url(\",_fonts_gangstergrotesk_light_ttf__WEBPACK_IMPORTED_MODULE_13___default.a,\");}body{margin:0;font-family:\\\"gangsterLight\\\";}p::selection{background-color:#f7f7a8;}iframe{border:none;};label:globalStyles;\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2luZGV4LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlFd0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaW5kZXguanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBHbG9iYWwsIGNzcywgY29ubmVjdCwgSGVhZCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IFN3aXRjaCBmcm9tIFwiQGZyb250aXR5L2NvbXBvbmVudHMvc3dpdGNoXCI7XG5pbXBvcnQgSGVhZGVyIGZyb20gXCIuL2hlYWRlclwiO1xuaW1wb3J0IEhvbWUgZnJvbSBcIi4vaG9tZVwiO1xuaW1wb3J0IFdvcmtzIGZyb20gXCIuL3dvcmtzXCI7XG5pbXBvcnQgQWJvdXQgZnJvbSBcIi4vYWJvdXRcIjtcbmltcG9ydCBTZXJ2aWNlcyBmcm9tIFwiLi9zZXJ2aWNlc1wiO1xuaW1wb3J0IFNpbmdsZVdvcmsgZnJvbSBcIi4vc2luZ2xlV29ya1wiO1xuaW1wb3J0IExvYWRpbmcgZnJvbSBcIi4vcHJlbG9hZGVyXCI7XG5pbXBvcnQgeyB1c2VUcmFuc2l0aW9uLCBhbmltYXRlZCB9IGZyb20gXCJyZWFjdC1zcHJpbmdcIjtcblxuaW1wb3J0IGdhbmdzdGVyUmVndWxhciBmcm9tIFwiLi4vZm9udHMvZ2FuZ3N0ZXJncm90ZXNrLXJlZ3VsYXIudHRmXCI7XG5pbXBvcnQgZ2FuZ3N0ZXJMaWdodCBmcm9tIFwiLi4vZm9udHMvZ2FuZ3N0ZXJncm90ZXNrLWxpZ2h0LnR0ZlwiO1xuXG5pbXBvcnQgYXBwbGVUb3VjaEljb24gZnJvbSBcIi4uL2ltYWdlcy9mYXZpY29uL2FwcGxlLXRvdWNoLWljb24ucG5nXCI7XG5pbXBvcnQgZmF2aWNvbjMyIGZyb20gXCIuLi9pbWFnZXMvZmF2aWNvbi9mYXZpY29uLTMyeDMyLnBuZ1wiO1xuaW1wb3J0IGZhdmljb24xNiBmcm9tIFwiLi4vaW1hZ2VzL2Zhdmljb24vZmF2aWNvbi0xNngxNi5wbmdcIjtcbi8vaW1wb3J0IHdlYk1hbmlmZXN0IGZyb20gXCIuLi9pbWFnZXMvZmF2aWNvbi9zaXRlLndlYm1hbmlmZXN0XCI7XG5pbXBvcnQgc2FmYXJpUGlubmVkVGFiIGZyb20gXCIuLi9pbWFnZXMvZmF2aWNvbi9zYWZhcmktcGlubmVkLXRhYi5zdmdcIjtcblxuY29uc3QgVGhlbWUgPSAoeyBzdGF0ZSwgYWN0aW9ucyB9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIC8vY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xuICAvL2NvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcblxuICBjb25zdCBwYWdlVHJhbnNpdGlvbnMgPSB1c2VUcmFuc2l0aW9uKHN0YXRlLnJvdXRlci5saW5rLCBudWxsLCB7XG4gICAgY29uZmlnOiB7IGR1cmF0aW9uOiA1MDAgfSxcbiAgICBmcm9tOiB7IG9wYWNpdHk6IDAgfSxcbiAgICBlbnRlcjogeyBvcGFjaXR5OiAxIH0sXG4gICAgbGVhdmU6IHsgb3BhY2l0eTogMCwgZGlzcGxheTogXCJub25lXCIgfSxcbiAgfSk7XG5cbiAgcmV0dXJuIChcbiAgICA8PlxuICAgICAgPEhlYWQ+XG4gICAgICAgIDx0aXRsZT57c3RhdGUuZnJvbnRpdHkudGl0bGV9PC90aXRsZT5cbiAgICAgICAgPG1ldGEgbmFtZT1cImRlc2NyaXB0aW9uXCIgY29udGVudD17c3RhdGUuZnJvbnRpdHkuZGVzY3JpcHRpb259IC8+XG4gICAgICAgIDxodG1sIGxhbmc9XCJlblwiIC8+XG4gICAgICAgIDxsaW5rIHJlbD1cImFwcGxlLXRvdWNoLWljb25cIiBzaXplcz1cIjE4MHgxODBcIiBocmVmPXthcHBsZVRvdWNoSWNvbn0vPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgdHlwZT1cImltYWdlL3BuZ1wiIHNpemVzPVwiMzJ4MzJcIiBocmVmPXtmYXZpY29uMzJ9Lz5cbiAgICAgICAgPGxpbmsgcmVsPVwiaWNvblwiIHR5cGU9XCJpbWFnZS9wbmdcIiBzaXplcz1cIjE2eDE2XCIgaHJlZj17ZmF2aWNvbjE2fS8+XG4gICAgICAgIDxsaW5rIHJlbD1cIm1hc2staWNvblwiIGhyZWY9e3NhZmFyaVBpbm5lZFRhYn0gY29sb3I9XCIjNWJiYWQ1XCIvPlxuICAgICAgICA8bWV0YSBuYW1lPVwibXNhcHBsaWNhdGlvbi1UaWxlQ29sb3JcIiBjb250ZW50PVwiI2ZmYzQwZFwiLz5cbiAgICAgICAgPG1ldGEgbmFtZT1cInRoZW1lLWNvbG9yXCIgY29udGVudD1cIiNmZmZmZmZcIi8+XG4gICAgICA8L0hlYWQ+XG5cbiAgICAgIDxHbG9iYWwgc3R5bGVzPXtnbG9iYWxTdHlsZXN9IC8+XG5cbiAgICAgIDxIZWFkZXIgLz5cbiAgICAgIHtwYWdlVHJhbnNpdGlvbnMubWFwKCh7IHByb3BzLCBrZXkgfSkgPT4gKFxuICAgICAgICA8YW5pbWF0ZWQuZGl2IHN0eWxlPXtwcm9wc30ga2V5PXtrZXl9PlxuICAgICAgPFN3aXRjaD5cbiAgICAgICAgPEhvbWUgd2hlbj17ZGF0YS5pc0hvbWV9IC8+XG4gICAgICAgIHsvKiA8RW1wdHkgd2hlbj17ZGF0YS5pZCA9PSAzNX0gLz4gKi99XG4gICAgICAgIDxXb3JrcyB3aGVuPXtkYXRhLmlkID09IDM1ICYmIGRhdGEuaXNSZWFkeX0gLz5cbiAgICAgICAgPEFib3V0IHdoZW49e2RhdGEuaWQgPT0gNTMgJiYgZGF0YS5pc1JlYWR5fSAvPlxuICAgICAgICA8U2VydmljZXMgd2hlbj17ZGF0YS5pZCA9PSA3NSAmJiBkYXRhLmlzUmVhZHl9IC8+XG4gICAgICAgIDxTaW5nbGVXb3JrIHdoZW49e2RhdGEuaXNQb3N0ICYmIGRhdGEuaXNSZWFkeX0gLz5cbiAgICAgICAgPExvYWRpbmcgd2hlbj17ZGF0YS5pc0ZldGNoaW5nfSAvPlxuICAgICAgPC9Td2l0Y2g+XG4gICAgICA8L2FuaW1hdGVkLmRpdj5cbiAgICAgICkpfVxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChUaGVtZSk7XG5cbmNvbnN0IGdsb2JhbFN0eWxlcyA9IGNzc2BcbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJSZWd1bGFyXCI7XG4gICAgc3JjOiB1cmwoJHtnYW5nc3RlclJlZ3VsYXJ9KTtcbiAgfVxuXG4gIEBmb250LWZhY2Uge1xuICAgIGZvbnQtZmFtaWx5OiBcImdhbmdzdGVyTGlnaHRcIjtcbiAgICBzcmM6IHVybCgke2dhbmdzdGVyTGlnaHR9KTtcbiAgfVxuXG4gIGJvZHkge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LWZhbWlseTogXCJnYW5nc3RlckxpZ2h0XCI7XG4gIH1cblxuICBwOjpzZWxlY3Rpb24ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmN2Y3YTg7XG4gIH1cblxuICBpZnJhbWUge1xuICAgIGJvcmRlcjogbm9uZTtcbiAgfVxuYDtcbiJdfQ== */\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaW5kZXguanM/MzBmNSJdLCJuYW1lcyI6WyJUaGVtZSIsInN0YXRlIiwiYWN0aW9ucyIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZVRyYW5zaXRpb25zIiwidXNlVHJhbnNpdGlvbiIsImNvbmZpZyIsImR1cmF0aW9uIiwiZnJvbSIsIm9wYWNpdHkiLCJlbnRlciIsImxlYXZlIiwiZGlzcGxheSIsImZyb250aXR5IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImFwcGxlVG91Y2hJY29uIiwiZmF2aWNvbjMyIiwiZmF2aWNvbjE2Iiwic2FmYXJpUGlubmVkVGFiIiwiZ2xvYmFsU3R5bGVzIiwibWFwIiwicHJvcHMiLCJrZXkiLCJpc0hvbWUiLCJpZCIsImlzUmVhZHkiLCJpc1Bvc3QiLCJpc0ZldGNoaW5nIiwiY29ubmVjdCIsImNzcyIsImdhbmdzdGVyUmVndWxhciIsImdhbmdzdGVyTGlnaHQiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQWtCQTtBQUdBLEdBQU1BLE1BQUssQ0FBRyxRQUF3QixJQUF2QixDQUFFQyxLQUFGLENBQVNDLE9BQVQsQ0FBdUIsTUFDcEM7QUFDQSxHQUFNQyxLQUFJLENBQUdGLEtBQUssQ0FBQ0csTUFBTixDQUFhQyxHQUFiLENBQWlCSixLQUFLLENBQUNLLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQSxHQUFNQyxnQkFBZSxDQUFHQyxtRUFBYSxDQUFDUixLQUFLLENBQUNLLE1BQU4sQ0FBYUMsSUFBZCxDQUFvQixJQUFwQixDQUEwQixDQUM3REcsTUFBTSxDQUFFLENBQUVDLFFBQVEsQ0FBRSxHQUFaLENBRHFELENBRTdEQyxJQUFJLENBQUUsQ0FBRUMsT0FBTyxDQUFFLENBQVgsQ0FGdUQsQ0FHN0RDLEtBQUssQ0FBRSxDQUFFRCxPQUFPLENBQUUsQ0FBWCxDQUhzRCxDQUk3REUsS0FBSyxDQUFFLENBQUVGLE9BQU8sQ0FBRSxDQUFYLENBQWNHLE9BQU8sQ0FBRSxNQUF2QixDQUpzRCxDQUExQixDQUFyQyxDQU9BLE1BQ0Usc0hBQ0UsMERBQUMsNkNBQUQsTUFDRSx1RUFBUWYsS0FBSyxDQUFDZ0IsUUFBTixDQUFlQyxLQUF2QixDQURGLENBRUUsa0VBQU0sSUFBSSxDQUFDLGFBQVgsQ0FBeUIsT0FBTyxDQUFFakIsS0FBSyxDQUFDZ0IsUUFBTixDQUFlRSxXQUFqRCxFQUZGLENBR0Usa0VBQU0sSUFBSSxDQUFDLElBQVgsRUFIRixDQUlFLGtFQUFNLEdBQUcsQ0FBQyxrQkFBVixDQUE2QixLQUFLLENBQUMsU0FBbkMsQ0FBNkMsSUFBSSxDQUFFQyw0RUFBbkQsRUFKRixDQUtFLGtFQUFNLEdBQUcsQ0FBQyxNQUFWLENBQWlCLElBQUksQ0FBQyxXQUF0QixDQUFrQyxLQUFLLENBQUMsT0FBeEMsQ0FBZ0QsSUFBSSxDQUFFQyx5RUFBdEQsRUFMRixDQU1FLGtFQUFNLEdBQUcsQ0FBQyxNQUFWLENBQWlCLElBQUksQ0FBQyxXQUF0QixDQUFrQyxLQUFLLENBQUMsT0FBeEMsQ0FBZ0QsSUFBSSxDQUFFQyx5RUFBdEQsRUFORixDQU9FLGtFQUFNLEdBQUcsQ0FBQyxXQUFWLENBQXNCLElBQUksQ0FBRUMsNkVBQTVCLENBQTZDLEtBQUssQ0FBQyxTQUFuRCxFQVBGLENBUUUsa0VBQU0sSUFBSSxDQUFDLHlCQUFYLENBQXFDLE9BQU8sQ0FBQyxTQUE3QyxFQVJGLENBU0Usa0VBQU0sSUFBSSxDQUFDLGFBQVgsQ0FBeUIsT0FBTyxDQUFDLFNBQWpDLEVBVEYsQ0FERixDQWFFLDBEQUFDLG9EQUFELEVBQVEsTUFBTSxDQUFFQyxZQUFoQixFQWJGLENBZUUsMERBQUMsK0NBQUQsTUFmRixDQWdCR2hCLGVBQWUsQ0FBQ2lCLEdBQWhCLENBQW9CLGFBQUMsQ0FBRUMsS0FBRixDQUFTQyxHQUFULENBQUQsYUFDbkIsMkRBQUMsc0RBQUQsQ0FBVSxHQUFWLEVBQWMsS0FBSyxDQUFFRCxLQUFyQixDQUE0QixHQUFHLENBQUVDLEdBQWpDLEVBQ0YsMERBQUMsbUVBQUQsTUFDRSwwREFBQyw2Q0FBRCxFQUFNLElBQUksQ0FBRXhCLElBQUksQ0FBQ3lCLE1BQWpCLEVBREYsQ0FHRSwwREFBQyw4Q0FBRCxFQUFPLElBQUksQ0FBRXpCLElBQUksQ0FBQzBCLEVBQUwsRUFBVyxFQUFYLEVBQWlCMUIsSUFBSSxDQUFDMkIsT0FBbkMsRUFIRixDQUlFLDBEQUFDLDhDQUFELEVBQU8sSUFBSSxDQUFFM0IsSUFBSSxDQUFDMEIsRUFBTCxFQUFXLEVBQVgsRUFBaUIxQixJQUFJLENBQUMyQixPQUFuQyxFQUpGLENBS0UsMERBQUMsaURBQUQsRUFBVSxJQUFJLENBQUUzQixJQUFJLENBQUMwQixFQUFMLEVBQVcsRUFBWCxFQUFpQjFCLElBQUksQ0FBQzJCLE9BQXRDLEVBTEYsQ0FNRSwwREFBQyxtREFBRCxFQUFZLElBQUksQ0FBRTNCLElBQUksQ0FBQzRCLE1BQUwsRUFBZTVCLElBQUksQ0FBQzJCLE9BQXRDLEVBTkYsQ0FPRSwwREFBQyxtREFBRCxFQUFTLElBQUksQ0FBRTNCLElBQUksQ0FBQzZCLFVBQXBCLEVBUEYsQ0FERSxDQURtQixFQUFwQixDQWhCSCxDQURGLENBZ0NELENBaERELENBa0RlQyx1SEFBTyxDQUFDakMsS0FBRCxDQUF0QixFQUVBLEdBQU13QixhQUFZLGNBQUdVLHlEQUFILHVEQUdIQywwRUFIRyx3REFRSEMsd0VBUkcsZ21KQUFsQiIsImZpbGUiOiIuL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9pbmRleC5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IEdsb2JhbCwgY3NzLCBjb25uZWN0LCBIZWFkIH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgU3dpdGNoIGZyb20gXCJAZnJvbnRpdHkvY29tcG9uZW50cy9zd2l0Y2hcIjtcbmltcG9ydCBIZWFkZXIgZnJvbSBcIi4vaGVhZGVyXCI7XG5pbXBvcnQgSG9tZSBmcm9tIFwiLi9ob21lXCI7XG5pbXBvcnQgV29ya3MgZnJvbSBcIi4vd29ya3NcIjtcbmltcG9ydCBBYm91dCBmcm9tIFwiLi9hYm91dFwiO1xuaW1wb3J0IFNlcnZpY2VzIGZyb20gXCIuL3NlcnZpY2VzXCI7XG5pbXBvcnQgU2luZ2xlV29yayBmcm9tIFwiLi9zaW5nbGVXb3JrXCI7XG5pbXBvcnQgTG9hZGluZyBmcm9tIFwiLi9wcmVsb2FkZXJcIjtcbmltcG9ydCB7IHVzZVRyYW5zaXRpb24sIGFuaW1hdGVkIH0gZnJvbSBcInJlYWN0LXNwcmluZ1wiO1xuXG5pbXBvcnQgZ2FuZ3N0ZXJSZWd1bGFyIGZyb20gXCIuLi9mb250cy9nYW5nc3Rlcmdyb3Rlc2stcmVndWxhci50dGZcIjtcbmltcG9ydCBnYW5nc3RlckxpZ2h0IGZyb20gXCIuLi9mb250cy9nYW5nc3Rlcmdyb3Rlc2stbGlnaHQudHRmXCI7XG5cbmltcG9ydCBhcHBsZVRvdWNoSWNvbiBmcm9tIFwiLi4vaW1hZ2VzL2Zhdmljb24vYXBwbGUtdG91Y2gtaWNvbi5wbmdcIjtcbmltcG9ydCBmYXZpY29uMzIgZnJvbSBcIi4uL2ltYWdlcy9mYXZpY29uL2Zhdmljb24tMzJ4MzIucG5nXCI7XG5pbXBvcnQgZmF2aWNvbjE2IGZyb20gXCIuLi9pbWFnZXMvZmF2aWNvbi9mYXZpY29uLTE2eDE2LnBuZ1wiO1xuLy9pbXBvcnQgd2ViTWFuaWZlc3QgZnJvbSBcIi4uL2ltYWdlcy9mYXZpY29uL3NpdGUud2VibWFuaWZlc3RcIjtcbmltcG9ydCBzYWZhcmlQaW5uZWRUYWIgZnJvbSBcIi4uL2ltYWdlcy9mYXZpY29uL3NhZmFyaS1waW5uZWQtdGFiLnN2Z1wiO1xuXG5jb25zdCBUaGVtZSA9ICh7IHN0YXRlLCBhY3Rpb25zIH0pID0+IHtcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcbiAgLy9jb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XG4gIC8vY29uc29sZS5sb2cocGFnZSk7XG4gIC8vY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHBhZ2VUcmFuc2l0aW9ucyA9IHVzZVRyYW5zaXRpb24oc3RhdGUucm91dGVyLmxpbmssIG51bGwsIHtcbiAgICBjb25maWc6IHsgZHVyYXRpb246IDUwMCB9LFxuICAgIGZyb206IHsgb3BhY2l0eTogMCB9LFxuICAgIGVudGVyOiB7IG9wYWNpdHk6IDEgfSxcbiAgICBsZWF2ZTogeyBvcGFjaXR5OiAwLCBkaXNwbGF5OiBcIm5vbmVcIiB9LFxuICB9KTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8SGVhZD5cbiAgICAgICAgPHRpdGxlPntzdGF0ZS5mcm9udGl0eS50aXRsZX08L3RpdGxlPlxuICAgICAgICA8bWV0YSBuYW1lPVwiZGVzY3JpcHRpb25cIiBjb250ZW50PXtzdGF0ZS5mcm9udGl0eS5kZXNjcmlwdGlvbn0gLz5cbiAgICAgICAgPGh0bWwgbGFuZz1cImVuXCIgLz5cbiAgICAgICAgPGxpbmsgcmVsPVwiYXBwbGUtdG91Y2gtaWNvblwiIHNpemVzPVwiMTgweDE4MFwiIGhyZWY9e2FwcGxlVG91Y2hJY29ufS8+XG4gICAgICAgIDxsaW5rIHJlbD1cImljb25cIiB0eXBlPVwiaW1hZ2UvcG5nXCIgc2l6ZXM9XCIzMngzMlwiIGhyZWY9e2Zhdmljb24zMn0vPlxuICAgICAgICA8bGluayByZWw9XCJpY29uXCIgdHlwZT1cImltYWdlL3BuZ1wiIHNpemVzPVwiMTZ4MTZcIiBocmVmPXtmYXZpY29uMTZ9Lz5cbiAgICAgICAgPGxpbmsgcmVsPVwibWFzay1pY29uXCIgaHJlZj17c2FmYXJpUGlubmVkVGFifSBjb2xvcj1cIiM1YmJhZDVcIi8+XG4gICAgICAgIDxtZXRhIG5hbWU9XCJtc2FwcGxpY2F0aW9uLVRpbGVDb2xvclwiIGNvbnRlbnQ9XCIjZmZjNDBkXCIvPlxuICAgICAgICA8bWV0YSBuYW1lPVwidGhlbWUtY29sb3JcIiBjb250ZW50PVwiI2ZmZmZmZlwiLz5cbiAgICAgIDwvSGVhZD5cblxuICAgICAgPEdsb2JhbCBzdHlsZXM9e2dsb2JhbFN0eWxlc30gLz5cblxuICAgICAgPEhlYWRlciAvPlxuICAgICAge3BhZ2VUcmFuc2l0aW9ucy5tYXAoKHsgcHJvcHMsIGtleSB9KSA9PiAoXG4gICAgICAgIDxhbmltYXRlZC5kaXYgc3R5bGU9e3Byb3BzfSBrZXk9e2tleX0+XG4gICAgICA8U3dpdGNoPlxuICAgICAgICA8SG9tZSB3aGVuPXtkYXRhLmlzSG9tZX0gLz5cbiAgICAgICAgey8qIDxFbXB0eSB3aGVuPXtkYXRhLmlkID09IDM1fSAvPiAqL31cbiAgICAgICAgPFdvcmtzIHdoZW49e2RhdGEuaWQgPT0gMzUgJiYgZGF0YS5pc1JlYWR5fSAvPlxuICAgICAgICA8QWJvdXQgd2hlbj17ZGF0YS5pZCA9PSA1MyAmJiBkYXRhLmlzUmVhZHl9IC8+XG4gICAgICAgIDxTZXJ2aWNlcyB3aGVuPXtkYXRhLmlkID09IDc1ICYmIGRhdGEuaXNSZWFkeX0gLz5cbiAgICAgICAgPFNpbmdsZVdvcmsgd2hlbj17ZGF0YS5pc1Bvc3QgJiYgZGF0YS5pc1JlYWR5fSAvPlxuICAgICAgICA8TG9hZGluZyB3aGVuPXtkYXRhLmlzRmV0Y2hpbmd9IC8+XG4gICAgICA8L1N3aXRjaD5cbiAgICAgIDwvYW5pbWF0ZWQuZGl2PlxuICAgICAgKSl9XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFRoZW1lKTtcblxuY29uc3QgZ2xvYmFsU3R5bGVzID0gY3NzYFxuICBAZm9udC1mYWNlIHtcbiAgICBmb250LWZhbWlseTogXCJnYW5nc3RlclJlZ3VsYXJcIjtcbiAgICBzcmM6IHVybCgke2dhbmdzdGVyUmVndWxhcn0pO1xuICB9XG5cbiAgQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6IFwiZ2FuZ3N0ZXJMaWdodFwiO1xuICAgIHNyYzogdXJsKCR7Z2FuZ3N0ZXJMaWdodH0pO1xuICB9XG5cbiAgYm9keSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIGZvbnQtZmFtaWx5OiBcImdhbmdzdGVyTGlnaHRcIjtcbiAgfVxuXG4gIHA6OnNlbGVjdGlvbiB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y3ZjdhODtcbiAgfVxuXG4gIGlmcmFtZSB7XG4gICAgYm9yZGVyOiBub25lO1xuICB9XG5gO1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/index.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/preloader.js":
/*!*****************************************************!*\
  !*** ./packages/rounda/src/components/preloader.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var lottie_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lottie-react */ \"./node_modules/lottie-react/build/index.umd.js\");\n/* harmony import */ var lottie_react__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lottie_react__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lottie_animations_loading_json__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../lottie-animations/loading.json */ \"./packages/rounda/src/lottie-animations/loading.json\");\nvar _lottie_animations_loading_json__WEBPACK_IMPORTED_MODULE_4___namespace = /*#__PURE__*/__webpack_require__.t(/*! ../lottie-animations/loading.json */ \"./packages/rounda/src/lottie-animations/loading.json\", 1);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"1c6c7m-Loading\",styles:\"position:fixed;left:50%;top:50%;transform:translate(-50%,-50%);width:200px;height:auto;display:flex;justify-content:center;align-items:center;;label:Loading;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3ByZWxvYWRlci5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvQmdCIiwiZmlsZSI6Ii9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3ByZWxvYWRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IGNzcywgY29ubmVjdCB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IHsgdXNlTG90dGllIH0gZnJvbSBcImxvdHRpZS1yZWFjdFwiO1xuaW1wb3J0IGFuaW1hdGlvbiBmcm9tIFwiLi4vbG90dGllLWFuaW1hdGlvbnMvbG9hZGluZy5qc29uXCI7XG5cbmNvbnN0IExvYWRpbmcgPSAoKSA9PiB7XG4gIGNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGxvb3A6IHRydWUsXG4gICAgYXV0b3BsYXk6IHRydWUsXG4gICAgYW5pbWF0aW9uRGF0YTogYW5pbWF0aW9uLFxuICAgIHJlbmRlcmVyU2V0dGluZ3M6IHtcbiAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW86IFwieE1pZFlNaWQgc2xpY2VcIixcbiAgICB9LFxuICB9O1xuXG4gIGNvbnN0IHsgVmlldyB9ID0gdXNlTG90dGllKGRlZmF1bHRPcHRpb25zKTtcblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8ZGl2XG4gICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICAgICAgICBsZWZ0OiA1MCU7XG4gICAgICAgICAgdG9wOiA1MCU7XG4gICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSk7XG4gICAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICAgIGhlaWdodDogYXV0bztcbiAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGB9XG4gICAgICA+XG4gICAgICAgIHtWaWV3fVxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KExvYWRpbmcpO1xuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var Loading=()=>{var defaultOptions={loop:true,autoplay:true,animationData:_lottie_animations_loading_json__WEBPACK_IMPORTED_MODULE_4__,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};var{View}=Object(lottie_react__WEBPACK_IMPORTED_MODULE_3__[\"useLottie\"])(defaultOptions);return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_0___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_1__[\"jsx\"])(\"div\",{css:_ref},View));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Loading));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvcHJlbG9hZGVyLmpzP2Q2YTEiXSwibmFtZXMiOlsiTG9hZGluZyIsImRlZmF1bHRPcHRpb25zIiwibG9vcCIsImF1dG9wbGF5IiwiYW5pbWF0aW9uRGF0YSIsImFuaW1hdGlvbiIsInJlbmRlcmVyU2V0dGluZ3MiLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIiwiVmlldyIsInVzZUxvdHRpZSIsImNvbm5lY3QiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7c2tFQUtBLEdBQU1BLFFBQU8sQ0FBRyxJQUFNLENBQ3BCLEdBQU1DLGVBQWMsQ0FBRyxDQUNyQkMsSUFBSSxDQUFFLElBRGUsQ0FFckJDLFFBQVEsQ0FBRSxJQUZXLENBR3JCQyxhQUFhLENBQUVDLDREQUhNLENBSXJCQyxnQkFBZ0IsQ0FBRSxDQUNoQkMsbUJBQW1CLENBQUUsZ0JBREwsQ0FKRyxDQUF2QixDQVNBLEdBQU0sQ0FBRUMsSUFBRixFQUFXQyw4REFBUyxDQUFDUixjQUFELENBQTFCLENBRUEsTUFDRSxzSEFDRSxpRUFDRSxHQUFHLEtBREwsRUFhR08sSUFiSCxDQURGLENBREYsQ0FtQkQsQ0EvQkQsQ0FpQ2VFLHVIQUFPLENBQUNWLE9BQUQsQ0FBdEIiLCJmaWxlIjoiLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvcHJlbG9hZGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgY3NzLCBjb25uZWN0IH0gZnJvbSBcImZyb250aXR5XCI7XG5pbXBvcnQgeyB1c2VMb3R0aWUgfSBmcm9tIFwibG90dGllLXJlYWN0XCI7XG5pbXBvcnQgYW5pbWF0aW9uIGZyb20gXCIuLi9sb3R0aWUtYW5pbWF0aW9ucy9sb2FkaW5nLmpzb25cIjtcblxuY29uc3QgTG9hZGluZyA9ICgpID0+IHtcbiAgY29uc3QgZGVmYXVsdE9wdGlvbnMgPSB7XG4gICAgbG9vcDogdHJ1ZSxcbiAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICBhbmltYXRpb25EYXRhOiBhbmltYXRpb24sXG4gICAgcmVuZGVyZXJTZXR0aW5nczoge1xuICAgICAgcHJlc2VydmVBc3BlY3RSYXRpbzogXCJ4TWlkWU1pZCBzbGljZVwiLFxuICAgIH0sXG4gIH07XG5cbiAgY29uc3QgeyBWaWV3IH0gPSB1c2VMb3R0aWUoZGVmYXVsdE9wdGlvbnMpO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXZcbiAgICAgICAgY3NzPXtjc3NgXG4gICAgICAgICAgcG9zaXRpb246IGZpeGVkO1xuICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICB0b3A6IDUwJTtcbiAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICB3aWR0aDogMjAwcHg7XG4gICAgICAgICAgaGVpZ2h0OiBhdXRvO1xuICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgYH1cbiAgICAgID5cbiAgICAgICAge1ZpZXd9XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoTG9hZGluZyk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/preloader.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/services.js":
/*!****************************************************!*\
  !*** ./packages/rounda/src/components/services.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./footer */ \"./packages/rounda/src/components/footer.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_5__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1ubdfd3-Services\",styles:\"display:grid;grid-template-columns:1fr 1fr;grid-template-rows:1fr 2fr;grid-gap:1em 5vw;min-height:100vh;font-size:40px;@media only screen and (max-width:768px){font-size:32px;padding:3vw;}@media only screen and (max-width:768px){font-size:7vw;};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"1r1oawq-Services\",styles:\"display:flex;flex-direction:column;text-align:right;grid-column:1/2;grid-row:1/2;align-self:end;;label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NlcnZpY2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBKb0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvc2VydmljZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcblxyXG5jb25zdCBTZXJ2aWNlcyA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgY29uc3QgaW52ZXJ0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICBjb25zdCBjbGlja2VkRWwgPSBldmVudC50YXJnZXQucGFyZW50RWxlbWVudDtcclxuXHJcbiAgICBjb25zdCBzZXJ2aWNlT25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXJ2aWNlT25lXCIpO1xyXG4gICAgY29uc3Qgc2VydmljZVR3byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VydmljZVR3b1wiKTtcclxuXHJcbiAgICBpZiAoY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcImNsb3NlZFwiKSAmJiBjbGlja2VkRWwgPT0gc2VydmljZU9uZSkge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIGNsb3NlZFwiKTtcclxuICAgICAgZ3NhcC5mcm9tKFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0T25lXCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAxLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwiYXV0b1wiLFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikgJiZcclxuICAgICAgY2xpY2tlZEVsID09IHNlcnZpY2VPbmVcclxuICAgICkge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIG9wZW5lZFwiKTtcclxuXHJcbiAgICAgIGNvbnN0IHRsID0gZ3NhcC50aW1lbGluZSgpO1xyXG5cclxuICAgICAgdGwudG8oXCIudGV4dE9uZVwiLCB7XHJcbiAgICAgICAgeTogLTE1MCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0bC5zZXQoXCIudGV4dE9uZVwiLCB7XHJcbiAgICAgICAgeTogMCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIG9wYWNpdHk6IDAsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpICYmIGNsaWNrZWRFbCA9PSBzZXJ2aWNlVHdvKSB7XHJcbiAgICAgIC8vY29uc29sZS5sb2coXCJ3YXMgY2xvc2VkXCIpO1xyXG4gICAgICBnc2FwLmZyb20oXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgeTogLTE1MCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnRleHRUd29cIiwge1xyXG4gICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogXCJhdXRvXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmIChcclxuICAgICAgY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5lZFwiKSAmJlxyXG4gICAgICBjbGlja2VkRWwgPT0gc2VydmljZVR3b1xyXG4gICAgKSB7XHJcbiAgICAgIC8vY29uc29sZS5sb2coXCJ3YXMgb3BlbmVkXCIpO1xyXG5cclxuICAgICAgY29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKCk7XHJcblxyXG4gICAgICB0bC50byhcIi50ZXh0VHdvXCIsIHtcclxuICAgICAgICB5OiAtMTUwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRsLnNldChcIi50ZXh0VHdvXCIsIHtcclxuICAgICAgICB5OiAwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgb3BhY2l0eTogMCxcclxuICAgICAgICBwb2ludGVyRXZlbnRzOiBcIm5vbmVcIixcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJjbG9zZWRcIikpIHtcclxuICAgICAgY2xpY2tlZEVsLmNsYXNzTGlzdC5yZW1vdmUoXCJjbG9zZWRcIik7XHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QuYWRkKFwib3BlbmVkXCIpO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi5tYWluXCIsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIixcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnNlcnZpY2VcIiwge1xyXG4gICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmIChjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpKSB7XHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QucmVtb3ZlKFwib3BlbmVkXCIpO1xyXG4gICAgICBjbGlja2VkRWwuY2xhc3NMaXN0LmFkZChcImNsb3NlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIHNlcnZpY2VUd28uY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpICYmXHJcbiAgICAgIHNlcnZpY2VPbmUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpXHJcbiAgICApIHtcclxuICAgICAgZ3NhcC50byhcIi5tYWluXCIsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2U3ZTlmMlwiLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIuc2VydmljZVwiLCB7XHJcbiAgICAgICAgY29sb3I6IFwiYmxhY2tcIixcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCB0bCA9IGdzYXAudGltZWxpbmUoKTtcclxuXHJcbiAgICAgIHRsLnRvKFwiLnRleHRcIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGwuc2V0KFwiLnRleHRcIiwge1xyXG4gICAgICAgIHk6IDAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0XCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAwLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMmZyO1xyXG4gICAgICAgICAgICBncmlkLWdhcDogMWVtIDV2dztcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogM3Z3O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiA3dnc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICBncmlkLXJvdzogMS8yO1xyXG4gICAgICAgICAgICAgIGFsaWduLXNlbGY6IGVuZDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNlcnZpY2Ugc2VydmljZU9uZSBjbG9zZWRcIlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VydmljZV8xIH19XHJcbiAgICAgICAgICAgICAgb25DbGljaz17KGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbnZlcnQoZXZlbnQpO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBncmlkLWNvbHVtbjogMi8zO1xyXG4gICAgICAgICAgICAgIGdyaWQtcm93OiAyLzM7XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzZXJ2aWNlIHNlcnZpY2VUd28gY2xvc2VkXCJcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnNlcnZpY2VfMiB9fVxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaW52ZXJ0KGV2ZW50KTtcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0IHRleHRUd29cIlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA1dnc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VjdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dCB0ZXh0T25lXCJcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VjdGlvbl8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA1dnc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQudG9vbHNfMSB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNC41dnc7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5zZWN0aW9uXzMgfX1cclxuICAgICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChTZXJ2aWNlcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"112odde-Services\",styles:\"cursor:pointer;p{margin:0;};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"15hh64n-Services\",styles:\"grid-column:2/3;grid-row:2/3;;label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref5= false?undefined:{name:\"112odde-Services\",styles:\"cursor:pointer;p{margin:0;};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NlcnZpY2VzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBMc0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvc2VydmljZXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIGNzcywgc3R5bGVkIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBnc2FwIGZyb20gXCJnc2FwXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcblxyXG5jb25zdCBTZXJ2aWNlcyA9ICh7IHN0YXRlIH0pID0+IHtcclxuICAvL2NvbnNvbGUubG9nKHN0YXRlKTtcclxuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XHJcbiAgLy9jb25zb2xlLmxvZyhkYXRhKTtcclxuICBjb25zdCBwYWdlID0gc3RhdGUuc291cmNlW2RhdGEudHlwZV1bZGF0YS5pZF07XHJcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcclxuICBjb25zdCBjb250ZW50ID0gcGFnZS5hY2Y7XHJcbiAgLy9jb25zb2xlLmxvZyhjb250ZW50KTtcclxuXHJcbiAgY29uc3QgaW52ZXJ0ID0gKGV2ZW50KSA9PiB7XHJcbiAgICBjb25zdCBjbGlja2VkRWwgPSBldmVudC50YXJnZXQucGFyZW50RWxlbWVudDtcclxuXHJcbiAgICBjb25zdCBzZXJ2aWNlT25lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zZXJ2aWNlT25lXCIpO1xyXG4gICAgY29uc3Qgc2VydmljZVR3byA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VydmljZVR3b1wiKTtcclxuXHJcbiAgICBpZiAoY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcImNsb3NlZFwiKSAmJiBjbGlja2VkRWwgPT0gc2VydmljZU9uZSkge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIGNsb3NlZFwiKTtcclxuICAgICAgZ3NhcC5mcm9tKFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0T25lXCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAxLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwiYXV0b1wiLFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikgJiZcclxuICAgICAgY2xpY2tlZEVsID09IHNlcnZpY2VPbmVcclxuICAgICkge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIG9wZW5lZFwiKTtcclxuXHJcbiAgICAgIGNvbnN0IHRsID0gZ3NhcC50aW1lbGluZSgpO1xyXG5cclxuICAgICAgdGwudG8oXCIudGV4dE9uZVwiLCB7XHJcbiAgICAgICAgeTogLTE1MCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0bC5zZXQoXCIudGV4dE9uZVwiLCB7XHJcbiAgICAgICAgeTogMCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIG9wYWNpdHk6IDAsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpICYmIGNsaWNrZWRFbCA9PSBzZXJ2aWNlVHdvKSB7XHJcbiAgICAgIC8vY29uc29sZS5sb2coXCJ3YXMgY2xvc2VkXCIpO1xyXG4gICAgICBnc2FwLmZyb20oXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgeTogLTE1MCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnRleHRUd29cIiwge1xyXG4gICAgICAgIG9wYWNpdHk6IDEsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogXCJhdXRvXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmIChcclxuICAgICAgY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5lZFwiKSAmJlxyXG4gICAgICBjbGlja2VkRWwgPT0gc2VydmljZVR3b1xyXG4gICAgKSB7XHJcbiAgICAgIC8vY29uc29sZS5sb2coXCJ3YXMgb3BlbmVkXCIpO1xyXG5cclxuICAgICAgY29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKCk7XHJcblxyXG4gICAgICB0bC50byhcIi50ZXh0VHdvXCIsIHtcclxuICAgICAgICB5OiAtMTUwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRsLnNldChcIi50ZXh0VHdvXCIsIHtcclxuICAgICAgICB5OiAwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgb3BhY2l0eTogMCxcclxuICAgICAgICBwb2ludGVyRXZlbnRzOiBcIm5vbmVcIixcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJjbG9zZWRcIikpIHtcclxuICAgICAgY2xpY2tlZEVsLmNsYXNzTGlzdC5yZW1vdmUoXCJjbG9zZWRcIik7XHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QuYWRkKFwib3BlbmVkXCIpO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi5tYWluXCIsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiYmxhY2tcIixcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnNlcnZpY2VcIiwge1xyXG4gICAgICAgIGNvbG9yOiBcIndoaXRlXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfSBlbHNlIGlmIChjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpKSB7XHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QucmVtb3ZlKFwib3BlbmVkXCIpO1xyXG4gICAgICBjbGlja2VkRWwuY2xhc3NMaXN0LmFkZChcImNsb3NlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoXHJcbiAgICAgIHNlcnZpY2VUd28uY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpICYmXHJcbiAgICAgIHNlcnZpY2VPbmUuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpXHJcbiAgICApIHtcclxuICAgICAgZ3NhcC50byhcIi5tYWluXCIsIHtcclxuICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IFwiI2U3ZTlmMlwiLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIuc2VydmljZVwiLCB7XHJcbiAgICAgICAgY29sb3I6IFwiYmxhY2tcIixcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBjb25zdCB0bCA9IGdzYXAudGltZWxpbmUoKTtcclxuXHJcbiAgICAgIHRsLnRvKFwiLnRleHRcIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGwuc2V0KFwiLnRleHRcIiwge1xyXG4gICAgICAgIHk6IDAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0XCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAwLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxuICAgICAgICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnIgMmZyO1xyXG4gICAgICAgICAgICBncmlkLWdhcDogMWVtIDV2dztcclxuICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNDBweDtcclxuXHJcbiAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgICAgICAgICAgICBmb250LXNpemU6IDMycHg7XHJcbiAgICAgICAgICAgICAgcGFkZGluZzogM3Z3O1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiA3dnc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICBncmlkLXJvdzogMS8yO1xyXG4gICAgICAgICAgICAgIGFsaWduLXNlbGY6IGVuZDtcclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGNsYXNzTmFtZT1cInNlcnZpY2Ugc2VydmljZU9uZSBjbG9zZWRcIlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VydmljZV8xIH19XHJcbiAgICAgICAgICAgICAgb25DbGljaz17KGV2ZW50KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpbnZlcnQoZXZlbnQpO1xyXG4gICAgICAgICAgICAgIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBncmlkLWNvbHVtbjogMi8zO1xyXG4gICAgICAgICAgICAgIGdyaWQtcm93OiAyLzM7XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzZXJ2aWNlIHNlcnZpY2VUd28gY2xvc2VkXCJcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnNlcnZpY2VfMiB9fVxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaW52ZXJ0KGV2ZW50KTtcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJ0ZXh0IHRleHRUd29cIlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG4gICAgICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA1dnc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VjdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dCB0ZXh0T25lXCJcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgICAgICAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VjdGlvbl8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZm9udC1zaXplOiAyNXB4O1xyXG5cclxuICAgICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiA1dnc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQudG9vbHNfMSB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICBtYXJnaW46IDA7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjJweDtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIHAge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNC41dnc7XHJcbiAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5zZWN0aW9uXzMgfX1cclxuICAgICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9kaXY+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChTZXJ2aWNlcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref6= false?undefined:{name:\"1mxhprg-Services\",styles:\"font-size:25px;opacity:0;pointer-events:none;@media only screen and (max-width:425px){font-size:5vw;};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref7= false?undefined:{name:\"cty73s-Services\",styles:\"grid-column:1/2;grid-row:2/3;opacity:0;text-align:right;pointer-events:none;;label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref8= false?undefined:{name:\"131o066-Services\",styles:\"p{margin:0;font-size:25px;}@media only screen and (max-width:425px){p{font-size:5vw;}};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref9= false?undefined:{name:\"szal6r-Services\",styles:\"font-size:25px;@media only screen and (max-width:425px){font-size:5vw;};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref10= false?undefined:{name:\"u4m2w9-Services\",styles:\"p{margin:0;font-size:22px;}@media only screen and (max-width:425px){p{font-size:4.5vw;}};label:Services;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var Services=(_ref11)=>{var{state}=_ref11;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nvar invert=event=>{var clickedEl=event.target.parentElement;var serviceOne=document.querySelector(\".serviceOne\");var serviceTwo=document.querySelector(\".serviceTwo\");if(clickedEl.classList.contains(\"closed\")&&clickedEl==serviceOne){//console.log(\"was closed\");\ngsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].from(\".textOne\",{y:-150});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".textOne\",{opacity:1,pointerEvents:\"auto\"});}else if(clickedEl.classList.contains(\"opened\")&&clickedEl==serviceOne){//console.log(\"was opened\");\nvar tl=gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].timeline();tl.to(\".textOne\",{y:-150});tl.set(\".textOne\",{y:0});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".textOne\",{opacity:0,pointerEvents:\"none\"});}if(clickedEl.classList.contains(\"closed\")&&clickedEl==serviceTwo){//console.log(\"was closed\");\ngsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].from(\".textTwo\",{y:-150});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".textTwo\",{opacity:1,pointerEvents:\"auto\"});}else if(clickedEl.classList.contains(\"opened\")&&clickedEl==serviceTwo){//console.log(\"was opened\");\nvar _tl=gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].timeline();_tl.to(\".textTwo\",{y:-150});_tl.set(\".textTwo\",{y:0});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".textTwo\",{opacity:0,pointerEvents:\"none\"});}if(clickedEl.classList.contains(\"closed\")){clickedEl.classList.remove(\"closed\");clickedEl.classList.add(\"opened\");gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".main\",{backgroundColor:\"black\"});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".service\",{color:\"white\"});}else if(clickedEl.classList.contains(\"opened\")){clickedEl.classList.remove(\"opened\");clickedEl.classList.add(\"closed\");}if(serviceTwo.classList.contains(\"closed\")&&serviceOne.classList.contains(\"closed\")){gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".main\",{backgroundColor:\"#e7e9f2\"});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".service\",{color:\"black\"});var _tl2=gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].timeline();_tl2.to(\".text\",{y:-150});_tl2.set(\".text\",{y:0});gsap__WEBPACK_IMPORTED_MODULE_4__[\"default\"].to(\".text\",{opacity:0,pointerEvents:\"none\"});}};return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"main\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref2},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{className:\"service serviceOne closed\",css:_ref3,dangerouslySetInnerHTML:{__html:content.service_1},onClick:event=>{invert(event);}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{className:\"service serviceTwo closed\",css:_ref5,dangerouslySetInnerHTML:{__html:content.service_2},onClick:event=>{invert(event);}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{className:\"text textTwo\",css:_ref6,dangerouslySetInnerHTML:{__html:content.section_2}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{className:\"text textOne\",css:_ref7},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref8,dangerouslySetInnerHTML:{__html:content.section_1}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref9,dangerouslySetInnerHTML:{__html:content.tools_1}}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref10,dangerouslySetInnerHTML:{__html:content.section_3}})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Services));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"main\",{target:\"e1py1jjc0\",label:\"Container\"})( false?undefined:{name:\"1b72jd5\",styles:\"background-color:#e7e9f2;display:flex;flex-direction:column;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvc2VydmljZXMuanM/NDkzNCJdLCJuYW1lcyI6WyJnc2FwIiwicmVnaXN0ZXJQbHVnaW4iLCJTY3JvbGxUcmlnZ2VyIiwiU2VydmljZXMiLCJzdGF0ZSIsImRhdGEiLCJzb3VyY2UiLCJnZXQiLCJyb3V0ZXIiLCJsaW5rIiwicGFnZSIsInR5cGUiLCJpZCIsImNvbnRlbnQiLCJhY2YiLCJpbnZlcnQiLCJldmVudCIsImNsaWNrZWRFbCIsInRhcmdldCIsInBhcmVudEVsZW1lbnQiLCJzZXJ2aWNlT25lIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwic2VydmljZVR3byIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwiZnJvbSIsInkiLCJ0byIsIm9wYWNpdHkiLCJwb2ludGVyRXZlbnRzIiwidGwiLCJ0aW1lbGluZSIsInNldCIsInJlbW92ZSIsImFkZCIsImJhY2tncm91bmRDb2xvciIsImNvbG9yIiwiX19odG1sIiwic2VydmljZV8xIiwic2VydmljZV8yIiwic2VjdGlvbl8yIiwic2VjdGlvbl8xIiwidG9vbHNfMSIsInNlY3Rpb25fMyIsImNvbm5lY3QiLCJDb250YWluZXIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7cVJBSUFBLDRDQUFJLENBQUNDLGNBQUwsQ0FBb0JDLGdFQUFwQixFLHdqd0dBR0EsR0FBTUMsU0FBUSxDQUFHLFVBQWUsSUFBZCxDQUFFQyxLQUFGLENBQWMsUUFDOUI7QUFDQSxHQUFNQyxLQUFJLENBQUdELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxHQUFiLENBQWlCSCxLQUFLLENBQUNJLE1BQU4sQ0FBYUMsSUFBOUIsQ0FBYixDQUNBO0FBQ0EsR0FBTUMsS0FBSSxDQUFHTixLQUFLLENBQUNFLE1BQU4sQ0FBYUQsSUFBSSxDQUFDTSxJQUFsQixFQUF3Qk4sSUFBSSxDQUFDTyxFQUE3QixDQUFiLENBQ0E7QUFDQSxHQUFNQyxRQUFPLENBQUdILElBQUksQ0FBQ0ksR0FBckIsQ0FDQTtBQUVBLEdBQU1DLE9BQU0sQ0FBSUMsS0FBRCxFQUFXLENBQ3hCLEdBQU1DLFVBQVMsQ0FBR0QsS0FBSyxDQUFDRSxNQUFOLENBQWFDLGFBQS9CLENBRUEsR0FBTUMsV0FBVSxDQUFHQyxRQUFRLENBQUNDLGFBQVQsQ0FBdUIsYUFBdkIsQ0FBbkIsQ0FDQSxHQUFNQyxXQUFVLENBQUdGLFFBQVEsQ0FBQ0MsYUFBVCxDQUF1QixhQUF2QixDQUFuQixDQUVBLEdBQUlMLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkMsUUFBcEIsQ0FBNkIsUUFBN0IsR0FBMENSLFNBQVMsRUFBSUcsVUFBM0QsQ0FBdUUsQ0FDckU7QUFDQXBCLDRDQUFJLENBQUMwQixJQUFMLENBQVUsVUFBVixDQUFzQixDQUNwQkMsQ0FBQyxDQUFFLENBQUMsR0FEZ0IsQ0FBdEIsRUFJQTNCLDRDQUFJLENBQUM0QixFQUFMLENBQVEsVUFBUixDQUFvQixDQUNsQkMsT0FBTyxDQUFFLENBRFMsQ0FFbEJDLGFBQWEsQ0FBRSxNQUZHLENBQXBCLEVBSUQsQ0FWRCxJQVVPLElBQ0xiLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkMsUUFBcEIsQ0FBNkIsUUFBN0IsR0FDQVIsU0FBUyxFQUFJRyxVQUZSLENBR0wsQ0FDQTtBQUVBLEdBQU1XLEdBQUUsQ0FBRy9CLDRDQUFJLENBQUNnQyxRQUFMLEVBQVgsQ0FFQUQsRUFBRSxDQUFDSCxFQUFILENBQU0sVUFBTixDQUFrQixDQUNoQkQsQ0FBQyxDQUFFLENBQUMsR0FEWSxDQUFsQixFQUlBSSxFQUFFLENBQUNFLEdBQUgsQ0FBTyxVQUFQLENBQW1CLENBQ2pCTixDQUFDLENBQUUsQ0FEYyxDQUFuQixFQUlBM0IsNENBQUksQ0FBQzRCLEVBQUwsQ0FBUSxVQUFSLENBQW9CLENBQ2xCQyxPQUFPLENBQUUsQ0FEUyxDQUVsQkMsYUFBYSxDQUFFLE1BRkcsQ0FBcEIsRUFJRCxDQUVELEdBQUliLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkMsUUFBcEIsQ0FBNkIsUUFBN0IsR0FBMENSLFNBQVMsRUFBSU0sVUFBM0QsQ0FBdUUsQ0FDckU7QUFDQXZCLDRDQUFJLENBQUMwQixJQUFMLENBQVUsVUFBVixDQUFzQixDQUNwQkMsQ0FBQyxDQUFFLENBQUMsR0FEZ0IsQ0FBdEIsRUFJQTNCLDRDQUFJLENBQUM0QixFQUFMLENBQVEsVUFBUixDQUFvQixDQUNsQkMsT0FBTyxDQUFFLENBRFMsQ0FFbEJDLGFBQWEsQ0FBRSxNQUZHLENBQXBCLEVBSUQsQ0FWRCxJQVVPLElBQ0xiLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkMsUUFBcEIsQ0FBNkIsUUFBN0IsR0FDQVIsU0FBUyxFQUFJTSxVQUZSLENBR0wsQ0FDQTtBQUVBLEdBQU1RLElBQUUsQ0FBRy9CLDRDQUFJLENBQUNnQyxRQUFMLEVBQVgsQ0FFQUQsR0FBRSxDQUFDSCxFQUFILENBQU0sVUFBTixDQUFrQixDQUNoQkQsQ0FBQyxDQUFFLENBQUMsR0FEWSxDQUFsQixFQUlBSSxHQUFFLENBQUNFLEdBQUgsQ0FBTyxVQUFQLENBQW1CLENBQ2pCTixDQUFDLENBQUUsQ0FEYyxDQUFuQixFQUlBM0IsNENBQUksQ0FBQzRCLEVBQUwsQ0FBUSxVQUFSLENBQW9CLENBQ2xCQyxPQUFPLENBQUUsQ0FEUyxDQUVsQkMsYUFBYSxDQUFFLE1BRkcsQ0FBcEIsRUFJRCxDQUVELEdBQUliLFNBQVMsQ0FBQ08sU0FBVixDQUFvQkMsUUFBcEIsQ0FBNkIsUUFBN0IsQ0FBSixDQUE0QyxDQUMxQ1IsU0FBUyxDQUFDTyxTQUFWLENBQW9CVSxNQUFwQixDQUEyQixRQUEzQixFQUNBakIsU0FBUyxDQUFDTyxTQUFWLENBQW9CVyxHQUFwQixDQUF3QixRQUF4QixFQUVBbkMsNENBQUksQ0FBQzRCLEVBQUwsQ0FBUSxPQUFSLENBQWlCLENBQ2ZRLGVBQWUsQ0FBRSxPQURGLENBQWpCLEVBSUFwQyw0Q0FBSSxDQUFDNEIsRUFBTCxDQUFRLFVBQVIsQ0FBb0IsQ0FDbEJTLEtBQUssQ0FBRSxPQURXLENBQXBCLEVBR0QsQ0FYRCxJQVdPLElBQUlwQixTQUFTLENBQUNPLFNBQVYsQ0FBb0JDLFFBQXBCLENBQTZCLFFBQTdCLENBQUosQ0FBNEMsQ0FDakRSLFNBQVMsQ0FBQ08sU0FBVixDQUFvQlUsTUFBcEIsQ0FBMkIsUUFBM0IsRUFDQWpCLFNBQVMsQ0FBQ08sU0FBVixDQUFvQlcsR0FBcEIsQ0FBd0IsUUFBeEIsRUFDRCxDQUVELEdBQ0VaLFVBQVUsQ0FBQ0MsU0FBWCxDQUFxQkMsUUFBckIsQ0FBOEIsUUFBOUIsR0FDQUwsVUFBVSxDQUFDSSxTQUFYLENBQXFCQyxRQUFyQixDQUE4QixRQUE5QixDQUZGLENBR0UsQ0FDQXpCLDRDQUFJLENBQUM0QixFQUFMLENBQVEsT0FBUixDQUFpQixDQUNmUSxlQUFlLENBQUUsU0FERixDQUFqQixFQUlBcEMsNENBQUksQ0FBQzRCLEVBQUwsQ0FBUSxVQUFSLENBQW9CLENBQ2xCUyxLQUFLLENBQUUsT0FEVyxDQUFwQixFQUlBLEdBQU1OLEtBQUUsQ0FBRy9CLDRDQUFJLENBQUNnQyxRQUFMLEVBQVgsQ0FFQUQsSUFBRSxDQUFDSCxFQUFILENBQU0sT0FBTixDQUFlLENBQ2JELENBQUMsQ0FBRSxDQUFDLEdBRFMsQ0FBZixFQUlBSSxJQUFFLENBQUNFLEdBQUgsQ0FBTyxPQUFQLENBQWdCLENBQ2ROLENBQUMsQ0FBRSxDQURXLENBQWhCLEVBSUEzQiw0Q0FBSSxDQUFDNEIsRUFBTCxDQUFRLE9BQVIsQ0FBaUIsQ0FDZkMsT0FBTyxDQUFFLENBRE0sQ0FFZkMsYUFBYSxDQUFFLE1BRkEsQ0FBakIsRUFJRCxDQUNGLENBakhELENBbUhBLE1BQ0Usc0hBQ0UsMERBQUMsU0FBRCxFQUFXLFNBQVMsQ0FBQyxNQUFyQixFQUNFLGlFQUNFLEdBQUcsS0FETCxFQW1CRSxpRUFDRSxHQUFHLE1BREwsRUFVRSxpRUFDRSxTQUFTLENBQUMsMkJBRFosQ0FFRSxHQUFHLE1BRkwsQ0FTRSx1QkFBdUIsQ0FBRSxDQUFFUSxNQUFNLENBQUV6QixPQUFPLENBQUMwQixTQUFsQixDQVQzQixDQVVFLE9BQU8sQ0FBR3ZCLEtBQUQsRUFBVyxDQUNsQkQsTUFBTSxDQUFDQyxLQUFELENBQU4sQ0FDRCxDQVpILEVBVkYsQ0FuQkYsQ0E0Q0UsaUVBQ0UsR0FBRyxNQURMLEVBTUUsaUVBQ0UsU0FBUyxDQUFDLDJCQURaLENBRUUsR0FBRyxNQUZMLENBU0UsdUJBQXVCLENBQUUsQ0FBRXNCLE1BQU0sQ0FBRXpCLE9BQU8sQ0FBQzJCLFNBQWxCLENBVDNCLENBVUUsT0FBTyxDQUFHeEIsS0FBRCxFQUFXLENBQ2xCRCxNQUFNLENBQUNDLEtBQUQsQ0FBTixDQUNELENBWkgsRUFORixDQW9CRSxpRUFDRSxTQUFTLENBQUMsY0FEWixDQUVFLEdBQUcsTUFGTCxDQVdFLHVCQUF1QixDQUFFLENBQUVzQixNQUFNLENBQUV6QixPQUFPLENBQUM0QixTQUFsQixDQVgzQixFQXBCRixDQTVDRixDQStFRSxpRUFDRSxTQUFTLENBQUMsY0FEWixDQUVFLEdBQUcsTUFGTCxFQVVFLGlFQUNFLEdBQUcsTUFETCxDQWFFLHVCQUF1QixDQUFFLENBQUVILE1BQU0sQ0FBRXpCLE9BQU8sQ0FBQzZCLFNBQWxCLENBYjNCLEVBVkYsQ0F5QkUsaUVBQ0UsR0FBRyxNQURMLENBUUUsdUJBQXVCLENBQUUsQ0FBRUosTUFBTSxDQUFFekIsT0FBTyxDQUFDOEIsT0FBbEIsQ0FSM0IsRUF6QkYsQ0FtQ0UsaUVBQ0UsR0FBRyxPQURMLENBYUUsdUJBQXVCLENBQUUsQ0FBRUwsTUFBTSxDQUFFekIsT0FBTyxDQUFDK0IsU0FBbEIsQ0FiM0IsRUFuQ0YsQ0EvRUYsQ0FERixDQURGLENBc0lFLDBEQUFDLCtDQUFELE1BdElGLENBREYsQ0EwSUQsQ0F0UUQsQ0F3UWVDLHVIQUFPLENBQUMxQyxRQUFELENBQXRCLEVBRUEsR0FBTTJDLFVBQVMseTlVQUFmIiwiZmlsZSI6Ii4vcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NlcnZpY2VzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBjc3MsIHN0eWxlZCB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgeyBTY3JvbGxUcmlnZ2VyIH0gZnJvbSBcImdzYXAvU2Nyb2xsVHJpZ2dlclwiO1xyXG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5cclxuY29uc3QgU2VydmljZXMgPSAoeyBzdGF0ZSB9KSA9PiB7XHJcbiAgLy9jb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgY29uc3QgZGF0YSA9IHN0YXRlLnNvdXJjZS5nZXQoc3RhdGUucm91dGVyLmxpbmspO1xyXG4gIC8vY29uc29sZS5sb2coZGF0YSk7XHJcbiAgY29uc3QgcGFnZSA9IHN0YXRlLnNvdXJjZVtkYXRhLnR5cGVdW2RhdGEuaWRdO1xyXG4gIC8vY29uc29sZS5sb2cocGFnZSk7XHJcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xyXG4gIC8vY29uc29sZS5sb2coY29udGVudCk7XHJcblxyXG4gIGNvbnN0IGludmVydCA9IChldmVudCkgPT4ge1xyXG4gICAgY29uc3QgY2xpY2tlZEVsID0gZXZlbnQudGFyZ2V0LnBhcmVudEVsZW1lbnQ7XHJcblxyXG4gICAgY29uc3Qgc2VydmljZU9uZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2VydmljZU9uZVwiKTtcclxuICAgIGNvbnN0IHNlcnZpY2VUd28gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnNlcnZpY2VUd29cIik7XHJcblxyXG4gICAgaWYgKGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJjbG9zZWRcIikgJiYgY2xpY2tlZEVsID09IHNlcnZpY2VPbmUpIHtcclxuICAgICAgLy9jb25zb2xlLmxvZyhcIndhcyBjbG9zZWRcIik7XHJcbiAgICAgIGdzYXAuZnJvbShcIi50ZXh0T25lXCIsIHtcclxuICAgICAgICB5OiAtMTUwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIudGV4dE9uZVwiLCB7XHJcbiAgICAgICAgb3BhY2l0eTogMSxcclxuICAgICAgICBwb2ludGVyRXZlbnRzOiBcImF1dG9cIixcclxuICAgICAgfSk7XHJcbiAgICB9IGVsc2UgaWYgKFxyXG4gICAgICBjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwib3BlbmVkXCIpICYmXHJcbiAgICAgIGNsaWNrZWRFbCA9PSBzZXJ2aWNlT25lXHJcbiAgICApIHtcclxuICAgICAgLy9jb25zb2xlLmxvZyhcIndhcyBvcGVuZWRcIik7XHJcblxyXG4gICAgICBjb25zdCB0bCA9IGdzYXAudGltZWxpbmUoKTtcclxuXHJcbiAgICAgIHRsLnRvKFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgdGwuc2V0KFwiLnRleHRPbmVcIiwge1xyXG4gICAgICAgIHk6IDAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0T25lXCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAwLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwibm9uZVwiLFxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcImNsb3NlZFwiKSAmJiBjbGlja2VkRWwgPT0gc2VydmljZVR3bykge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIGNsb3NlZFwiKTtcclxuICAgICAgZ3NhcC5mcm9tKFwiLnRleHRUd29cIiwge1xyXG4gICAgICAgIHk6IC0xNTAsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi50ZXh0VHdvXCIsIHtcclxuICAgICAgICBvcGFjaXR5OiAxLFxyXG4gICAgICAgIHBvaW50ZXJFdmVudHM6IFwiYXV0b1wiLFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSBpZiAoXHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QuY29udGFpbnMoXCJvcGVuZWRcIikgJiZcclxuICAgICAgY2xpY2tlZEVsID09IHNlcnZpY2VUd29cclxuICAgICkge1xyXG4gICAgICAvL2NvbnNvbGUubG9nKFwid2FzIG9wZW5lZFwiKTtcclxuXHJcbiAgICAgIGNvbnN0IHRsID0gZ3NhcC50aW1lbGluZSgpO1xyXG5cclxuICAgICAgdGwudG8oXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgeTogLTE1MCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICB0bC5zZXQoXCIudGV4dFR3b1wiLCB7XHJcbiAgICAgICAgeTogMCxcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnRleHRUd29cIiwge1xyXG4gICAgICAgIG9wYWNpdHk6IDAsXHJcbiAgICAgICAgcG9pbnRlckV2ZW50czogXCJub25lXCIsXHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChjbGlja2VkRWwuY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2xvc2VkXCIpKSB7XHJcbiAgICAgIGNsaWNrZWRFbC5jbGFzc0xpc3QucmVtb3ZlKFwiY2xvc2VkXCIpO1xyXG4gICAgICBjbGlja2VkRWwuY2xhc3NMaXN0LmFkZChcIm9wZW5lZFwiKTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIubWFpblwiLCB7XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcImJsYWNrXCIsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgZ3NhcC50byhcIi5zZXJ2aWNlXCIsIHtcclxuICAgICAgICBjb2xvcjogXCJ3aGl0ZVwiLFxyXG4gICAgICB9KTtcclxuICAgIH0gZWxzZSBpZiAoY2xpY2tlZEVsLmNsYXNzTGlzdC5jb250YWlucyhcIm9wZW5lZFwiKSkge1xyXG4gICAgICBjbGlja2VkRWwuY2xhc3NMaXN0LnJlbW92ZShcIm9wZW5lZFwiKTtcclxuICAgICAgY2xpY2tlZEVsLmNsYXNzTGlzdC5hZGQoXCJjbG9zZWRcIik7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKFxyXG4gICAgICBzZXJ2aWNlVHdvLmNsYXNzTGlzdC5jb250YWlucyhcImNsb3NlZFwiKSAmJlxyXG4gICAgICBzZXJ2aWNlT25lLmNsYXNzTGlzdC5jb250YWlucyhcImNsb3NlZFwiKVxyXG4gICAgKSB7XHJcbiAgICAgIGdzYXAudG8oXCIubWFpblwiLCB7XHJcbiAgICAgICAgYmFja2dyb3VuZENvbG9yOiBcIiNlN2U5ZjJcIixcclxuICAgICAgfSk7XHJcblxyXG4gICAgICBnc2FwLnRvKFwiLnNlcnZpY2VcIiwge1xyXG4gICAgICAgIGNvbG9yOiBcImJsYWNrXCIsXHJcbiAgICAgIH0pO1xyXG5cclxuICAgICAgY29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKCk7XHJcblxyXG4gICAgICB0bC50byhcIi50ZXh0XCIsIHtcclxuICAgICAgICB5OiAtMTUwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIHRsLnNldChcIi50ZXh0XCIsIHtcclxuICAgICAgICB5OiAwLFxyXG4gICAgICB9KTtcclxuXHJcbiAgICAgIGdzYXAudG8oXCIudGV4dFwiLCB7XHJcbiAgICAgICAgb3BhY2l0eTogMCxcclxuICAgICAgICBwb2ludGVyRXZlbnRzOiBcIm5vbmVcIixcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfTtcclxuXHJcbiAgcmV0dXJuIChcclxuICAgIDw+XHJcbiAgICAgIDxDb250YWluZXIgY2xhc3NOYW1lPVwibWFpblwiPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICAgICAgICAgIGdyaWQtdGVtcGxhdGUtcm93czogMWZyIDJmcjtcclxuICAgICAgICAgICAgZ3JpZC1nYXA6IDFlbSA1dnc7XHJcbiAgICAgICAgICAgIG1pbi1oZWlnaHQ6IDEwMHZoO1xyXG4gICAgICAgICAgICBmb250LXNpemU6IDQwcHg7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMnB4O1xyXG4gICAgICAgICAgICAgIHBhZGRpbmc6IDN2dztcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XHJcbiAgICAgICAgICAgICAgZ3JpZC1yb3c6IDEvMjtcclxuICAgICAgICAgICAgICBhbGlnbi1zZWxmOiBlbmQ7XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjbGFzc05hbWU9XCJzZXJ2aWNlIHNlcnZpY2VPbmUgY2xvc2VkXCJcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnNlcnZpY2VfMSB9fVxyXG4gICAgICAgICAgICAgIG9uQ2xpY2s9eyhldmVudCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaW52ZXJ0KGV2ZW50KTtcclxuICAgICAgICAgICAgICB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwic2VydmljZSBzZXJ2aWNlVHdvIGNsb3NlZFwiXHJcbiAgICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgICAgICAgICAgICAgcCB7XHJcbiAgICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICBgfVxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5zZXJ2aWNlXzIgfX1cclxuICAgICAgICAgICAgICBvbkNsaWNrPXsoZXZlbnQpID0+IHtcclxuICAgICAgICAgICAgICAgIGludmVydChldmVudCk7XHJcbiAgICAgICAgICAgICAgfX1cclxuICAgICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgY2xhc3NOYW1lPVwidGV4dCB0ZXh0VHdvXCJcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuICAgICAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnNlY3Rpb25fMiB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNsYXNzTmFtZT1cInRleHQgdGV4dE9uZVwiXHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XHJcbiAgICAgICAgICAgICAgZ3JpZC1yb3c6IDIvMztcclxuICAgICAgICAgICAgICBvcGFjaXR5OiAwO1xyXG4gICAgICAgICAgICAgIHRleHQtYWxpZ246IHJpZ2h0O1xyXG4gICAgICAgICAgICAgIHBvaW50ZXItZXZlbnRzOiBub25lO1xyXG4gICAgICAgICAgICBgfVxyXG4gICAgICAgICAgPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDI1cHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDV2dztcclxuICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnNlY3Rpb25fMSB9fVxyXG4gICAgICAgICAgICA+PC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjVweDtcclxuXHJcbiAgICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LnRvb2xzXzEgfX1cclxuICAgICAgICAgICAgPjwvZGl2PlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgbWFyZ2luOiAwO1xyXG4gICAgICAgICAgICAgICAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgICBwIHtcclxuICAgICAgICAgICAgICAgICAgICBmb250LXNpemU6IDQuNXZ3O1xyXG4gICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuc2VjdGlvbl8zIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2VydmljZXMpO1xyXG5cclxuY29uc3QgQ29udGFpbmVyID0gc3R5bGVkLm1haW5gXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbmA7XHJcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/services.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/singleWork.js":
/*!******************************************************!*\
  !*** ./packages/rounda/src/components/singleWork.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer */ \"./packages/rounda/src/components/footer.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var _animationSection__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./animationSection */ \"./packages/rounda/src/components/animationSection.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_5__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_7__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"1v8cbh6-SingleWork\",styles:\"min-height:100vh;display:flex;flex-direction:column;z-index:1;background-color:#e7e9f2;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0JrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"eogbm9-SingleWork\",styles:\"display:flex;flex-direction:column;padding-top:15vh;font-size:30px;width:50%;align-self:center;@media only screen and (max-width:768px){width:90%;}@media only screen and (max-width:425px){width:80%;font-size:6vw;};label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0JvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref3= false?undefined:{name:\"j1tu3d-SingleWork\",styles:\"z-index:1;background-color:#e7e9f2;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMERrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref4= false?undefined:{name:\"u808yp-SingleWork\",styles:\"width:60%;font-size:24px;margin:10vw;@media only screen and (max-width:768px){width:80%;font-size:20px;}@media only screen and (max-width:425px){font-size:5vw;};label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0VvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref5= false?undefined:{name:\"5rvndx-SingleWork\",styles:\"background-color:black;display:flex;flex-direction:column;color:white;z-index:1;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBc0ZrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref6= false?undefined:{name:\"1fc54ye-SingleWork\",styles:\"display:flex;flex-direction:column;img{width:100%;}width:60vw;@media only screen and (max-width:768px){width:80vw;}@media only screen and (max-width:425px){width:90vw;};label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBK0ZvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref7= false?undefined:{name:\"2l9e4g-SingleWork\",styles:\"display:grid;grid-template-columns:auto auto;grid-template-rows:auto auto;column-gap:5vw;width:60vw;align-self:flex-end;margin:10vw;img{width:100%;}@media only screen and (max-width:768px){width:80vw;}@media only screen and (max-width:425px){width:90vw;margin-right:0;};label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUhvQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref8= false?undefined:{name:\"senecg-SingleWork\",styles:\"grid-column:1/2;grid-row:1/2;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBZ0pzQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref9= false?undefined:{name:\"dldxo3-SingleWork\",styles:\"grid-column:2/3;grid-row:1/2;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBdUpzQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref10= false?undefined:{name:\"x91yoo-SingleWork\",styles:\"grid-column:1/3;grid-row:2/3;;label:SingleWork;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBOEpzQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var SingleWork=(_ref11)=>{var{state,actions}=_ref11;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar post=state.source[data.type][data.id];//console.log(post);\nvar content=post.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"main\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{className:\"firstSection\",css:_ref},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref2},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.title),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.description}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_animationSection__WEBPACK_IMPORTED_MODULE_6__[\"default\"],null),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref3},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref4},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.description_2}}))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref5},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref6},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_1}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.extra_text_1}})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{css:_ref7},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_2,css:_ref8}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_3,css:_ref9}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"div\",{dangerouslySetInnerHTML:{__html:content.extra_text_2},css:_ref10})))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(SingleWork));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"main\",{target:\"e1rmva8j0\",label:\"Container\"})( false?undefined:{name:\"1b72jd5\",styles:\"background-color:#e7e9f2;display:flex;flex-direction:column;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3NpbmdsZVdvcmsuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBNks2QiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsIFNpdGVzL1JvdW5kYS1ub2RlL3BhY2thZ2VzL3JvdW5kYS9zcmMvY29tcG9uZW50cy9zaW5nbGVXb3JrLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gXCJyZWFjdFwiO1xyXG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xyXG5pbXBvcnQgRm9vdGVyIGZyb20gXCIuL2Zvb3RlclwiO1xyXG5pbXBvcnQgZ3NhcCBmcm9tIFwiZ3NhcFwiO1xyXG5pbXBvcnQgQW5pbWF0aW9uU2VjdGlvbiBmcm9tIFwiLi9hbmltYXRpb25TZWN0aW9uXCI7XHJcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XHJcbmdzYXAucmVnaXN0ZXJQbHVnaW4oU2Nyb2xsVHJpZ2dlcik7XHJcblxyXG5jb25zdCBTaW5nbGVXb3JrID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBvc3QgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBvc3QpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwb3N0LmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPGRpdlxyXG4gICAgICAgICAgY2xhc3NOYW1lPVwiZmlyc3RTZWN0aW9uXCJcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICAgICAgICAgICAgZGlzcGxheTogZmxleDtcclxuICAgICAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2U3ZTlmMjtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgcGFkZGluZy10b3A6IDE1dmg7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAzMHB4O1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA1MCU7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTAlO1xyXG4gICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNnZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGV9PC9wPlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw9e3sgX19odG1sOiBjb250ZW50LmRlc2NyaXB0aW9uIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8QW5pbWF0aW9uU2VjdGlvbiAvPlxyXG4gICAgICAgIDxkaXZcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICB6LWluZGV4OiAxO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gICAgICAgICAgYH1cclxuICAgICAgICA+XHJcbiAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgIHdpZHRoOiA2MCU7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgICAgICAgICAgIG1hcmdpbjogMTB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwJTtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogNXZ3O1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5kZXNjcmlwdGlvbl8yIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICA8ZGl2XHJcbiAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgei1pbmRleDogMTtcclxuICAgICAgICAgIGB9XHJcbiAgICAgICAgPlxyXG4gICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICAgICAgICAgICAgaW1nIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICB3aWR0aDogNjB2dztcclxuXHJcbiAgICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDgwdnc7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogOTB2dztcclxuICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICA+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XHJcbiAgICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgICBkYW5nZXJvdXNseVNldElubmVySFRNTD17eyBfX2h0bWw6IGNvbnRlbnQuZXh0cmFfdGV4dF8xIH19XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG5cclxuICAgICAgICAgIDxkaXZcclxuICAgICAgICAgICAgY3NzPXtjc3NgXHJcbiAgICAgICAgICAgICAgZGlzcGxheTogZ3JpZDtcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBncmlkLXRlbXBsYXRlLXJvd3M6IGF1dG8gYXV0bztcclxuICAgICAgICAgICAgICBjb2x1bW4tZ2FwOiA1dnc7XHJcbiAgICAgICAgICAgICAgd2lkdGg6IDYwdnc7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbiAgICAgICAgICAgICAgbWFyZ2luOiAxMHZ3O1xyXG5cclxuICAgICAgICAgICAgICBpbWcge1xyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogODB2dztcclxuICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgICAgICAgICAgICAgIHdpZHRoOiA5MHZ3O1xyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAwO1xyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYH1cclxuICAgICAgICAgID5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8yfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGltZ1xyXG4gICAgICAgICAgICAgIHNyYz17Y29udGVudC5pbWFnZV8zfVxyXG4gICAgICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICAgICAgZ3JpZC1jb2x1bW46IDIvMztcclxuICAgICAgICAgICAgICAgIGdyaWQtcm93OiAxLzI7XHJcbiAgICAgICAgICAgICAgYH1cclxuICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgPGRpdlxyXG4gICAgICAgICAgICAgIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MPXt7IF9faHRtbDogY29udGVudC5leHRyYV90ZXh0XzIgfX1cclxuICAgICAgICAgICAgICBjc3M9e2Nzc2BcclxuICAgICAgICAgICAgICAgIGdyaWQtY29sdW1uOiAxLzM7XHJcbiAgICAgICAgICAgICAgICBncmlkLXJvdzogMi8zO1xyXG4gICAgICAgICAgICAgIGB9XHJcbiAgICAgICAgICAgID48L2Rpdj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L0NvbnRhaW5lcj5cclxuICAgICAgPEZvb3RlciAvPlxyXG4gICAgPC8+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNvbm5lY3QoU2luZ2xlV29yayk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/singleWork.js\n");

/***/ }),

/***/ "./packages/rounda/src/components/works.js":
/*!*************************************************!*\
  !*** ./packages/rounda/src/components/works.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled-base */ \"./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @emotion/core */ \"./node_modules/@emotion/core/dist/core.browser.esm.js\");\n/* harmony import */ var _footer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./footer */ \"./packages/rounda/src/components/footer.js\");\n/* harmony import */ var _link__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./link */ \"./packages/rounda/src/components/link.js\");\n/* harmony import */ var _images_cursor_png__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../images/cursor.png */ \"./packages/rounda/src/images/cursor.png\");\n/* harmony import */ var _images_cursor_png__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_images_cursor_png__WEBPACK_IMPORTED_MODULE_6__);\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}var _ref= false?undefined:{name:\"631697-Works\",styles:\"font-size:50px;width:40%;align-self:flex-end;margin-right:10vw;margin-top:0;@media only screen and (max-width:768px){align-self:center;width:80%;margin-right:10vw;margin-left:10vw;font-size:70px;}@media only screen and (max-width:425px){margin-top:0;font-size:17vw;};label:Works;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQW1Ca0IiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var Works=(_ref2)=>{var{state,actions}=_ref2;//console.log(state);\nvar data=state.source.get(state.router.link);//console.log(data);\nvar page=state.source[data.type][data.id];//console.log(page);\nvar content=page.acf;//console.log(content);\nreturn Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(react__WEBPACK_IMPORTED_MODULE_1___default.a.Fragment,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(Container,{className:\"main\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",{css:_ref},content.title_1),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(DivOne,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_link__WEBPACK_IMPORTED_MODULE_5__[\"default\"],{href:\"/faccia-a-faccia\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_1})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_1)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(DivTwo,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"a\",{href:\"https://agne-portfolio.vercel.app/\",target:\"_blank\"},Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_2})),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_2)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(DivThree,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubDivOne,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_3}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_3)),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(SubDivTwo,null,Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"img\",{src:content.image_4}),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(\"p\",null,content.paragraph_4)))),Object(_emotion_core__WEBPACK_IMPORTED_MODULE_3__[\"jsx\"])(_footer__WEBPACK_IMPORTED_MODULE_4__[\"default\"],null));};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_2__[\"connect\"])(Works));var Container=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"main\",{target:\"e1hjn2e80\",label:\"Container\"})( false?undefined:{name:\"3a5v34\",styles:\"background-color:#e7e9f2;display:flex;flex-direction:column;padding-top:15vh;padding-bottom:15vh;a{position:static;mix-blend-mode:normal;z-index:initial;}div{img{width:100%;}img:hover{filter:invert(20%) sepia(75%) saturate(6766%) hue-rotate(252deg) brightness(89%) contrast(86%);}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlGNkIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var DivOne=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e81\",label:\"DivOne\"})( false?undefined:{name:\"1nntjh0\",styles:\"margin-left:10vw;margin-top:10vw;width:45vw;max-width:450px;@media only screen and (max-width:768px){margin-left:0;width:55vw;}@media only screen and (max-width:425px){width:70vw;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlHeUIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var DivTwo=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e82\",label:\"DivTwo\"})( false?undefined:{name:\"551u90\",styles:\"align-self:flex-end;margin-right:5vw;margin-top:5vw;width:60vw;max-width:650px;@media only screen and (max-width:768px){width:65vw;}@media only screen and (max-width:425px){width:100vw;margin-right:0;margin-top:10vh;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQXlIeUIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var DivThree=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e83\",label:\"DivThree\"})( false?undefined:{name:\"1x56aip\",styles:\"align-self:center;margin-top:10vw;display:flex;flex-direction:column;width:60vw;max-width:650px;p{width:70%;}@media only screen and (max-width:768px){width:65vw;}@media only screen and (max-width:425px){margin-top:10vh;width:100vw;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJJMkIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});var SubDivOne=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e84\",label:\"SubDivOne\"})(\"margin:0;align-self:center;img{cursor:url(\",_images_cursor_png__WEBPACK_IMPORTED_MODULE_6___default.a,\"),auto;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWlLNEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\"));var SubDivTwo=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e85\",label:\"SubDivTwo\"})(\"align-self:flex-end;margin:0;margin-top:10vw;width:45vw;max-width:450px;img{cursor:url(\",_images_cursor_png__WEBPACK_IMPORTED_MODULE_6___default.a,\"),auto;}@media only screen and (max-width:768px){width:55vw;}@media only screen and (max-width:425px){width:70vw;}\"+( false?undefined:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTBLNEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\"));var SubDivThree=Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(\"div\",{target:\"e1hjn2e86\",label:\"SubDivThree\"})( false?undefined:{name:\"11nh073\",styles:\"align-self:flex-start;margin-top:10vw;width:45vw;max-width:450px;@media only screen and (max-width:768px){width:55vw;}@media only screen and (max-width:425px){width:70vw;}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwgU2l0ZXMvUm91bmRhLW5vZGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL3dvcmtzLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQThMOEIiLCJmaWxlIjoiL1VzZXJzL0FpdmFyczEvRGVza3RvcC9Mb2NhbCBTaXRlcy9Sb3VuZGEtbm9kZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvd29ya3MuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSBcInJlYWN0XCI7XHJcbmltcG9ydCB7IGNvbm5lY3QsIHN0eWxlZCwgY3NzIH0gZnJvbSBcImZyb250aXR5XCI7XHJcbmltcG9ydCBGb290ZXIgZnJvbSBcIi4vZm9vdGVyXCI7XHJcbmltcG9ydCBMaW5rIGZyb20gXCIuL2xpbmtcIjtcclxuaW1wb3J0IGN1cnNvciBmcm9tIFwiLi4vaW1hZ2VzL2N1cnNvci5wbmdcIjtcclxuXHJcbmNvbnN0IFdvcmtzID0gKHsgc3RhdGUsIGFjdGlvbnMgfSkgPT4ge1xyXG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xyXG4gIGNvbnN0IGRhdGEgPSBzdGF0ZS5zb3VyY2UuZ2V0KHN0YXRlLnJvdXRlci5saW5rKTtcclxuICAvL2NvbnNvbGUubG9nKGRhdGEpO1xyXG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcclxuICAvL2NvbnNvbGUubG9nKHBhZ2UpO1xyXG4gIGNvbnN0IGNvbnRlbnQgPSBwYWdlLmFjZjtcclxuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xyXG5cclxuICByZXR1cm4gKFxyXG4gICAgPD5cclxuICAgICAgPENvbnRhaW5lciBjbGFzc05hbWU9XCJtYWluXCI+XHJcbiAgICAgICAgPHBcclxuICAgICAgICAgIGNzcz17Y3NzYFxyXG4gICAgICAgICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgICAgICAgIHdpZHRoOiA0MCU7XHJcbiAgICAgICAgICAgIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG4gICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwdnc7XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcblxyXG4gICAgICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICAgICAgICAgICAgYWxpZ24tc2VsZjogY2VudGVyO1xyXG4gICAgICAgICAgICAgIHdpZHRoOiA4MCU7XHJcbiAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAxMHZ3O1xyXG4gICAgICAgICAgICAgIGZvbnQtc2l6ZTogNzBweDtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgICAgICAgICAgIG1hcmdpbi10b3A6IDA7XHJcbiAgICAgICAgICAgICAgZm9udC1zaXplOiAxN3Z3O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICBgfVxyXG4gICAgICAgID5cclxuICAgICAgICAgIHtjb250ZW50LnRpdGxlXzF9XHJcbiAgICAgICAgPC9wPlxyXG5cclxuICAgICAgICA8RGl2T25lPlxyXG4gICAgICAgICAgPExpbmsgaHJlZj1cIi9mYWNjaWEtYS1mYWNjaWFcIj5cclxuICAgICAgICAgICAgPGltZyBzcmM9e2NvbnRlbnQuaW1hZ2VfMX0gLz5cclxuICAgICAgICAgIDwvTGluaz5cclxuICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8xfTwvcD5cclxuICAgICAgICA8L0Rpdk9uZT5cclxuXHJcbiAgICAgICAgPERpdlR3bz5cclxuICAgICAgICAgIDxhIGhyZWY9XCJodHRwczovL2FnbmUtcG9ydGZvbGlvLnZlcmNlbC5hcHAvXCIgdGFyZ2V0PVwiX2JsYW5rXCI+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzJ9IC8+XHJcbiAgICAgICAgICA8L2E+XHJcbiAgICAgICAgICA8cD57Y29udGVudC5wYXJhZ3JhcGhfMn08L3A+XHJcbiAgICAgICAgPC9EaXZUd28+XHJcblxyXG4gICAgICAgIDxEaXZUaHJlZT5cclxuICAgICAgICAgIDxTdWJEaXZPbmU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzN9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF8zfTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2T25lPlxyXG5cclxuICAgICAgICAgIDxTdWJEaXZUd28+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzR9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF80fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VHdvPlxyXG5cclxuICAgICAgICAgIHsvKiA8U3ViRGl2VGhyZWU+XHJcbiAgICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzV9IC8+XHJcbiAgICAgICAgICAgIDxwPntjb250ZW50LnBhcmFncmFwaF81fTwvcD5cclxuICAgICAgICAgIDwvU3ViRGl2VGhyZWU+ICovfVxyXG4gICAgICAgIDwvRGl2VGhyZWU+XHJcbiAgICAgIDwvQ29udGFpbmVyPlxyXG4gICAgICA8Rm9vdGVyIC8+XHJcbiAgICA8Lz5cclxuICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChXb3Jrcyk7XHJcblxyXG5jb25zdCBDb250YWluZXIgPSBzdHlsZWQubWFpbmBcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTdlOWYyO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBwYWRkaW5nLXRvcDogMTV2aDtcclxuICBwYWRkaW5nLWJvdHRvbTogMTV2aDtcclxuXHJcbiAgYSB7XHJcbiAgICBwb3NpdGlvbjogc3RhdGljO1xyXG4gICAgbWl4LWJsZW5kLW1vZGU6IG5vcm1hbDtcclxuICAgIHotaW5kZXg6IGluaXRpYWw7XHJcbiAgfVxyXG5cclxuICBkaXYge1xyXG4gICAgaW1nIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICB9XHJcbiAgICBpbWc6aG92ZXIge1xyXG4gICAgICBmaWx0ZXI6IGludmVydCgyMCUpIHNlcGlhKDc1JSkgc2F0dXJhdGUoNjc2NiUpIGh1ZS1yb3RhdGUoMjUyZGVnKVxyXG4gICAgICAgIGJyaWdodG5lc3MoODklKSBjb250cmFzdCg4NiUpO1xyXG4gICAgfVxyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luLWxlZnQ6IDEwdnc7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICBtYXJnaW4tbGVmdDogMDtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW4tcmlnaHQ6IDV2dztcclxuICBtYXJnaW4tdG9wOiA1dnc7XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICB3aWR0aDogMTAwdnc7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDA7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IERpdlRocmVlID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBjZW50ZXI7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgd2lkdGg6IDYwdnc7XHJcbiAgbWF4LXdpZHRoOiA2NTBweDtcclxuXHJcbiAgcCB7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xyXG4gICAgd2lkdGg6IDY1dnc7XHJcbiAgfVxyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQyNXB4KSB7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHZoO1xyXG4gICAgd2lkdGg6IDEwMHZ3O1xyXG4gIH1cclxuYDtcclxuXHJcbmNvbnN0IFN1YkRpdk9uZSA9IHN0eWxlZC5kaXZgXHJcbiAgbWFyZ2luOiAwO1xyXG4gIGFsaWduLXNlbGY6IGNlbnRlcjtcclxuXHJcbiAgaW1nIHtcclxuICAgIGN1cnNvcjogdXJsKCR7Y3Vyc29yfSksIGF1dG87XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VHdvID0gc3R5bGVkLmRpdmBcclxuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcclxuICBtYXJnaW46IDA7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBpbWcge1xyXG4gICAgY3Vyc29yOiB1cmwoJHtjdXJzb3J9KSwgYXV0bztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIHdpZHRoOiA1NXZ3O1xyXG4gIH1cclxuXHJcbiAgQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA0MjVweCkge1xyXG4gICAgd2lkdGg6IDcwdnc7XHJcbiAgfVxyXG5gO1xyXG5cclxuY29uc3QgU3ViRGl2VGhyZWUgPSBzdHlsZWQuZGl2YFxyXG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XHJcbiAgbWFyZ2luLXRvcDogMTB2dztcclxuICB3aWR0aDogNDV2dztcclxuICBtYXgtd2lkdGg6IDQ1MHB4O1xyXG5cclxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XHJcbiAgICB3aWR0aDogNTV2dztcclxuICB9XHJcblxyXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcclxuICAgIHdpZHRoOiA3MHZ3O1xyXG4gIH1cclxuYDtcclxuIl19 */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/works.js\n");

/***/ })

})