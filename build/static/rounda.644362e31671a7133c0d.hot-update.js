webpackHotUpdate("rounda",{

/***/ "./packages/rounda/src/components/home2.js":
/*!*************************************************!*\
  !*** ./packages/rounda/src/components/home2.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! frontity */ \"./node_modules/frontity/dist/src/index.js\");\n/* harmony import */ var frontity__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(frontity__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var _emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @emotion/react/jsx-runtime */ \"./node_modules/@emotion/react/jsx-runtime/dist/emotion-react-jsx-runtime.browser.esm.js\");\nfunction _EMOTION_STRINGIFIED_CSS_ERROR__(){return\"You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop).\";}gsap__WEBPACK_IMPORTED_MODULE_2__[\"default\"].registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__[\"ScrollTrigger\"]);var _ref= false?undefined:{name:\"y7e9v2-Home2\",styles:\"width:100vw;height:56.25vw;min-height:100vh;min-width:177.77vh;position:absolute;top:50%;left:50%;transform:translate(-50%, -50%);label:Home2;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwtU2l0ZXMvUm91bmRhLXVwZGF0ZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaG9tZTIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBbUZ5RCIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsLVNpdGVzL1JvdW5kYS11cGRhdGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2hvbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5jb25zdCBIb21lMiA9ICh7c3RhdGV9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYmxhY2tTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHBpblZpZGVvU2VjdGlvbiA9ICgpID0+IHtcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XG4gICAgICB0cmlnZ2VyOiBbdmlkZW9TZWN0aW9uLmN1cnJlbnRdLFxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxuICAgICAgc2NydWI6IHRydWUsXG4gICAgICBwaW46IHRydWUsXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSBcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwaW5CbGFja1NlY3Rpb24gPSAoKSA9PiB7XG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgIHBpbjogdHJ1ZSxcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNjcm9sbEJsYWNrQ29udGVudCA9ICgpID0+IHtcbiAgICBnc2FwLnRvKFtibGFja1NlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcbiAgICAgIHlQZXJjZW50OiAtNTAsXG4gICAgICBlYXNlOiBcIm5vbmVcIixcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcbiAgICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxuICAgICAgICBzY3J1YjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnl7XG4gICAgcGluVmlkZW9TZWN0aW9uKCk7XG4gICAgcGluQmxhY2tTZWN0aW9uKCk7XG4gICAgc2Nyb2xsQmxhY2tDb250ZW50KCk7XG5cbiAgICAvLyBSZWZyZXNoIFNjcm9sbFRyaWdnZXIgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgU2Nyb2xsVHJpZ2dlci5yZWZyZXNoKHRydWUpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFuIGVycm9yIG9jY3VycmVkIGluIEdTQVAgYW5pbWF0aW9uOlwiLCBlcnJvcik7XG4gICAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBTY3JvbGxUcmlnZ2VyLmtpbGxBbGwoICkgO1xuICAgICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8Q3Vyc29yIC8+XG4gICAgICA8VmlkZW9TZWN0aW9uIHJlZj17dmlkZW9TZWN0aW9ufT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxNzcuNzd2aDsgXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgICAgYH0+XG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmludHJvZHVjdGlvbl92aWRlb30gdHlwZT1cInZpZGVvL21wNFwiLz5cbjwvdmlkZW8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9WaWRlb1NlY3Rpb24+XG5cbiAgICAgIDxCbGFja1NlY3Rpb24gcmVmPXtibGFja1NlY3Rpb259PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxwPntjb250ZW50LnRpdGxlXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XG4gICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGVfMn08L3A+XG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQmxhY2tTZWN0aW9uPlxuXG4gICAgICA8Rmlyc3RDb250YWluZXIvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChIb21lMik7XG5cbmNvbnN0IFZpZGVvU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuYDtcblxuY29uc3QgRmlyc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxud2lkdGg6IDEwMCU7XG5oZWlnaHQ6IDEwMHZoO1xuYmFja2dyb3VuZC1jb2xvcjogcGluaztcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IEJsYWNrU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHAge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG5cbiAgICBpbWcge1xuICAgICAgZ3JpZC1yb3c6IDEvMjtcbiAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICB3aWR0aDogNDV2dztcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBncmlkLXJvdzogMi8zO1xuICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgIHdpZHRoOiA0NXZ3O1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICAgIHAge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIFxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0bztcbiAgXG4gICAgICBpbWcge1xuICAgICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgICAgICB3aWR0aDogNTV2dztcbiAgICAgICBcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZ3JpZC1yb3c6IDMvNDtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgICAgZm9udC1zaXplOiA0dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIGdyaWQtcm93OiAyLzM7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICAgIHdpZHRoOiA1NXZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcblxuICAgIGRpdjpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBwIHtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cbiAgICB9XG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgXG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogNzB2dztcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZm9udC1zaXplOiA2dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIHdpZHRoOiA3MHZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuICB9XG5gOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};var _ref2= false?undefined:{name:\"1cviora-Home2\",styles:\"position:absolute;top:0;left:0;width:100%;height:100%;z-index:-1;pointer-events:none;overflow:hidden;label:Home2;\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwtU2l0ZXMvUm91bmRhLXVwZGF0ZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaG9tZTIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBd0VrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsLVNpdGVzL1JvdW5kYS11cGRhdGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2hvbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5jb25zdCBIb21lMiA9ICh7c3RhdGV9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYmxhY2tTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHBpblZpZGVvU2VjdGlvbiA9ICgpID0+IHtcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XG4gICAgICB0cmlnZ2VyOiBbdmlkZW9TZWN0aW9uLmN1cnJlbnRdLFxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxuICAgICAgc2NydWI6IHRydWUsXG4gICAgICBwaW46IHRydWUsXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSBcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwaW5CbGFja1NlY3Rpb24gPSAoKSA9PiB7XG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgIHBpbjogdHJ1ZSxcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNjcm9sbEJsYWNrQ29udGVudCA9ICgpID0+IHtcbiAgICBnc2FwLnRvKFtibGFja1NlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcbiAgICAgIHlQZXJjZW50OiAtNTAsXG4gICAgICBlYXNlOiBcIm5vbmVcIixcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcbiAgICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxuICAgICAgICBzY3J1YjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnl7XG4gICAgcGluVmlkZW9TZWN0aW9uKCk7XG4gICAgcGluQmxhY2tTZWN0aW9uKCk7XG4gICAgc2Nyb2xsQmxhY2tDb250ZW50KCk7XG5cbiAgICAvLyBSZWZyZXNoIFNjcm9sbFRyaWdnZXIgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgU2Nyb2xsVHJpZ2dlci5yZWZyZXNoKHRydWUpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFuIGVycm9yIG9jY3VycmVkIGluIEdTQVAgYW5pbWF0aW9uOlwiLCBlcnJvcik7XG4gICAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBTY3JvbGxUcmlnZ2VyLmtpbGxBbGwoICkgO1xuICAgICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8Q3Vyc29yIC8+XG4gICAgICA8VmlkZW9TZWN0aW9uIHJlZj17dmlkZW9TZWN0aW9ufT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxNzcuNzd2aDsgXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgICAgYH0+XG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmludHJvZHVjdGlvbl92aWRlb30gdHlwZT1cInZpZGVvL21wNFwiLz5cbjwvdmlkZW8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9WaWRlb1NlY3Rpb24+XG5cbiAgICAgIDxCbGFja1NlY3Rpb24gcmVmPXtibGFja1NlY3Rpb259PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxwPntjb250ZW50LnRpdGxlXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XG4gICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGVfMn08L3A+XG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQmxhY2tTZWN0aW9uPlxuXG4gICAgICA8Rmlyc3RDb250YWluZXIvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChIb21lMik7XG5cbmNvbnN0IFZpZGVvU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuYDtcblxuY29uc3QgRmlyc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxud2lkdGg6IDEwMCU7XG5oZWlnaHQ6IDEwMHZoO1xuYmFja2dyb3VuZC1jb2xvcjogcGluaztcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IEJsYWNrU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHAge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG5cbiAgICBpbWcge1xuICAgICAgZ3JpZC1yb3c6IDEvMjtcbiAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICB3aWR0aDogNDV2dztcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBncmlkLXJvdzogMi8zO1xuICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgIHdpZHRoOiA0NXZ3O1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICAgIHAge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIFxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0bztcbiAgXG4gICAgICBpbWcge1xuICAgICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgICAgICB3aWR0aDogNTV2dztcbiAgICAgICBcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZ3JpZC1yb3c6IDMvNDtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgICAgZm9udC1zaXplOiA0dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIGdyaWQtcm93OiAyLzM7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICAgIHdpZHRoOiA1NXZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcblxuICAgIGRpdjpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBwIHtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cbiAgICB9XG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgXG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogNzB2dztcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZm9udC1zaXplOiA2dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIHdpZHRoOiA3MHZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuICB9XG5gOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__};const Home2=({state})=>{//console.log(state);\nconst data=state.source.get(state.router.link);//console.log(data);\nconst page=state.source[data.type][data.id];//console.log(page);\nconst content=page.acf;//console.log(content);\nconst videoSection=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);const blackSection=Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useRef\"])(null);const pinVideoSection=()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__[\"ScrollTrigger\"].create({trigger:[videoSection.current],start:\"top top\",scrub:true,pin:true,pinSpacing:false});};const pinBlackSection=()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__[\"ScrollTrigger\"].create({trigger:[blackSection.current],start:\"bottom bottom\",pin:true,pinSpacing:false});};const scrollBlackContent=()=>{gsap__WEBPACK_IMPORTED_MODULE_2__[\"default\"].to([blackSection.current.children],{yPercent:-50,ease:\"none\",scrollTrigger:{trigger:[blackSection.current],start:\"bottom bottom\",scrub:true}});};Object(react__WEBPACK_IMPORTED_MODULE_0__[\"useEffect\"])(()=>{try{pinVideoSection();pinBlackSection();scrollBlackContent();// Refresh ScrollTrigger when component mounts\ngsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__[\"ScrollTrigger\"].refresh(true);}catch(error){console.error(\"An error occurred in GSAP animation:\",error);}return()=>{gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__[\"ScrollTrigger\"].killAll();};},[]);return Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"Fragment\"],{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(Cursor,{}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(VideoSection,{ref:videoSection,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{css:_ref2,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"video\",{autoPlay:true,loop:true,muted:true,playsInline:true,css:_ref,children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"source\",{src:content.introduction_video,type:\"video/mp4\"})})})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(BlackSection,{ref:blackSection,children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"div\",{children:Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:content.title_1})}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsxs\"])(\"div\",{children:[Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"img\",{src:content.image_1}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:content.title_2}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(\"p\",{children:content.paragraph_1})]})]}),Object(_emotion_react_jsx_runtime__WEBPACK_IMPORTED_MODULE_4__[\"jsx\"])(FirstContainer,{})]});};/* harmony default export */ __webpack_exports__[\"default\"] = (Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"connect\"])(Home2));const VideoSection=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1b0ktnr2\",label:\"VideoSection\"})( false?undefined:{name:\"13243w1\",styles:\"width:100%;height:100vh\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwtU2l0ZXMvUm91bmRhLXVwZGF0ZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaG9tZTIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBcUgrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsLVNpdGVzL1JvdW5kYS11cGRhdGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2hvbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5jb25zdCBIb21lMiA9ICh7c3RhdGV9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYmxhY2tTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHBpblZpZGVvU2VjdGlvbiA9ICgpID0+IHtcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XG4gICAgICB0cmlnZ2VyOiBbdmlkZW9TZWN0aW9uLmN1cnJlbnRdLFxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxuICAgICAgc2NydWI6IHRydWUsXG4gICAgICBwaW46IHRydWUsXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSBcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwaW5CbGFja1NlY3Rpb24gPSAoKSA9PiB7XG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgIHBpbjogdHJ1ZSxcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNjcm9sbEJsYWNrQ29udGVudCA9ICgpID0+IHtcbiAgICBnc2FwLnRvKFtibGFja1NlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcbiAgICAgIHlQZXJjZW50OiAtNTAsXG4gICAgICBlYXNlOiBcIm5vbmVcIixcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcbiAgICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxuICAgICAgICBzY3J1YjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnl7XG4gICAgcGluVmlkZW9TZWN0aW9uKCk7XG4gICAgcGluQmxhY2tTZWN0aW9uKCk7XG4gICAgc2Nyb2xsQmxhY2tDb250ZW50KCk7XG5cbiAgICAvLyBSZWZyZXNoIFNjcm9sbFRyaWdnZXIgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgU2Nyb2xsVHJpZ2dlci5yZWZyZXNoKHRydWUpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFuIGVycm9yIG9jY3VycmVkIGluIEdTQVAgYW5pbWF0aW9uOlwiLCBlcnJvcik7XG4gICAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBTY3JvbGxUcmlnZ2VyLmtpbGxBbGwoICkgO1xuICAgICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8Q3Vyc29yIC8+XG4gICAgICA8VmlkZW9TZWN0aW9uIHJlZj17dmlkZW9TZWN0aW9ufT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxNzcuNzd2aDsgXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgICAgYH0+XG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmludHJvZHVjdGlvbl92aWRlb30gdHlwZT1cInZpZGVvL21wNFwiLz5cbjwvdmlkZW8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9WaWRlb1NlY3Rpb24+XG5cbiAgICAgIDxCbGFja1NlY3Rpb24gcmVmPXtibGFja1NlY3Rpb259PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxwPntjb250ZW50LnRpdGxlXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XG4gICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGVfMn08L3A+XG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQmxhY2tTZWN0aW9uPlxuXG4gICAgICA8Rmlyc3RDb250YWluZXIvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChIb21lMik7XG5cbmNvbnN0IFZpZGVvU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuYDtcblxuY29uc3QgRmlyc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxud2lkdGg6IDEwMCU7XG5oZWlnaHQ6IDEwMHZoO1xuYmFja2dyb3VuZC1jb2xvcjogcGluaztcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IEJsYWNrU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHAge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG5cbiAgICBpbWcge1xuICAgICAgZ3JpZC1yb3c6IDEvMjtcbiAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICB3aWR0aDogNDV2dztcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBncmlkLXJvdzogMi8zO1xuICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgIHdpZHRoOiA0NXZ3O1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICAgIHAge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIFxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0bztcbiAgXG4gICAgICBpbWcge1xuICAgICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgICAgICB3aWR0aDogNTV2dztcbiAgICAgICBcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZ3JpZC1yb3c6IDMvNDtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgICAgZm9udC1zaXplOiA0dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIGdyaWQtcm93OiAyLzM7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICAgIHdpZHRoOiA1NXZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcblxuICAgIGRpdjpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBwIHtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cbiAgICB9XG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgXG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogNzB2dztcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZm9udC1zaXplOiA2dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIHdpZHRoOiA3MHZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuICB9XG5gOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const FirstContainer=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1b0ktnr1\",label:\"FirstContainer\"})( false?undefined:{name:\"jf7tr4\",styles:\"width:100%;height:100vh;background-color:pink;position:relative\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwtU2l0ZXMvUm91bmRhLXVwZGF0ZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaG9tZTIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBMEhpQyIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsLVNpdGVzL1JvdW5kYS11cGRhdGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2hvbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5jb25zdCBIb21lMiA9ICh7c3RhdGV9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYmxhY2tTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHBpblZpZGVvU2VjdGlvbiA9ICgpID0+IHtcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XG4gICAgICB0cmlnZ2VyOiBbdmlkZW9TZWN0aW9uLmN1cnJlbnRdLFxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxuICAgICAgc2NydWI6IHRydWUsXG4gICAgICBwaW46IHRydWUsXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSBcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwaW5CbGFja1NlY3Rpb24gPSAoKSA9PiB7XG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgIHBpbjogdHJ1ZSxcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNjcm9sbEJsYWNrQ29udGVudCA9ICgpID0+IHtcbiAgICBnc2FwLnRvKFtibGFja1NlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcbiAgICAgIHlQZXJjZW50OiAtNTAsXG4gICAgICBlYXNlOiBcIm5vbmVcIixcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcbiAgICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxuICAgICAgICBzY3J1YjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnl7XG4gICAgcGluVmlkZW9TZWN0aW9uKCk7XG4gICAgcGluQmxhY2tTZWN0aW9uKCk7XG4gICAgc2Nyb2xsQmxhY2tDb250ZW50KCk7XG5cbiAgICAvLyBSZWZyZXNoIFNjcm9sbFRyaWdnZXIgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgU2Nyb2xsVHJpZ2dlci5yZWZyZXNoKHRydWUpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFuIGVycm9yIG9jY3VycmVkIGluIEdTQVAgYW5pbWF0aW9uOlwiLCBlcnJvcik7XG4gICAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBTY3JvbGxUcmlnZ2VyLmtpbGxBbGwoICkgO1xuICAgICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8Q3Vyc29yIC8+XG4gICAgICA8VmlkZW9TZWN0aW9uIHJlZj17dmlkZW9TZWN0aW9ufT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxNzcuNzd2aDsgXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgICAgYH0+XG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmludHJvZHVjdGlvbl92aWRlb30gdHlwZT1cInZpZGVvL21wNFwiLz5cbjwvdmlkZW8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9WaWRlb1NlY3Rpb24+XG5cbiAgICAgIDxCbGFja1NlY3Rpb24gcmVmPXtibGFja1NlY3Rpb259PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxwPntjb250ZW50LnRpdGxlXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XG4gICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGVfMn08L3A+XG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQmxhY2tTZWN0aW9uPlxuXG4gICAgICA8Rmlyc3RDb250YWluZXIvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChIb21lMik7XG5cbmNvbnN0IFZpZGVvU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuYDtcblxuY29uc3QgRmlyc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxud2lkdGg6IDEwMCU7XG5oZWlnaHQ6IDEwMHZoO1xuYmFja2dyb3VuZC1jb2xvcjogcGluaztcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IEJsYWNrU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHAge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG5cbiAgICBpbWcge1xuICAgICAgZ3JpZC1yb3c6IDEvMjtcbiAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICB3aWR0aDogNDV2dztcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBncmlkLXJvdzogMi8zO1xuICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgIHdpZHRoOiA0NXZ3O1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICAgIHAge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIFxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0bztcbiAgXG4gICAgICBpbWcge1xuICAgICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgICAgICB3aWR0aDogNTV2dztcbiAgICAgICBcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZ3JpZC1yb3c6IDMvNDtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgICAgZm9udC1zaXplOiA0dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIGdyaWQtcm93OiAyLzM7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICAgIHdpZHRoOiA1NXZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcblxuICAgIGRpdjpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBwIHtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cbiAgICB9XG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgXG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogNzB2dztcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZm9udC1zaXplOiA2dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIHdpZHRoOiA3MHZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuICB9XG5gOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});const BlackSection=/*#__PURE__*/Object(frontity__WEBPACK_IMPORTED_MODULE_1__[\"styled\"])(\"div\", false?undefined:{target:\"e1b0ktnr0\",label:\"BlackSection\"})( false?undefined:{name:\"gvpfwz\",styles:\"background-color:black;color:white;padding-bottom:100px;position:relative;div:nth-of-type(1){height:100vh;display:flex;justify-content:center;align-items:center;p{width:50%;font-size:30px;}}div:nth-of-type(2){display:grid;grid-template-columns:auto auto;grid-template-rows:auto auto;img{grid-row:1/2;grid-column:1/2;width:45vw;max-width:450px;}p:nth-of-type(1){grid-row:1/2;grid-column:2/3;align-self:center;width:80%;margin-left:20px;margin-top:60px;font-size:20px;}p:nth-of-type(2){grid-row:2/3;grid-column:1/2;width:45vw;max-width:450px;}}@media only screen and (max-width: 768px){div:nth-of-type(1){p{width:70%;font-size:30px;}}div:nth-of-type(2){grid-template-columns:auto;grid-template-rows:auto auto auto;img{grid-row:1/2;grid-column:1/2;width:55vw;}p:nth-of-type(1){grid-row:3/4;grid-column:1/2;font-size:4vw;}p:nth-of-type(2){grid-row:2/3;grid-column:1/2;width:55vw;}}}@media only screen and (max-width: 425px){div:nth-of-type(1){p{font-size:10vw;}}div:nth-of-type(2){img{width:70vw;}p:nth-of-type(1){font-size:6vw;}p:nth-of-type(2){width:70vw;}}}\",map:\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9BaXZhcnMxL0Rlc2t0b3AvTG9jYWwtU2l0ZXMvUm91bmRhLXVwZGF0ZS9wYWNrYWdlcy9yb3VuZGEvc3JjL2NvbXBvbmVudHMvaG9tZTIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBaUkrQiIsImZpbGUiOiIvVXNlcnMvQWl2YXJzMS9EZXNrdG9wL0xvY2FsLVNpdGVzL1JvdW5kYS11cGRhdGUvcGFja2FnZXMvcm91bmRhL3NyYy9jb21wb25lbnRzL2hvbWUyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0LCB7IHVzZVJlZiwgdXNlRWZmZWN0IH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBjb25uZWN0LCBzdHlsZWQsIGNzcyB9IGZyb20gXCJmcm9udGl0eVwiO1xuaW1wb3J0IGdzYXAgZnJvbSBcImdzYXBcIjtcbmltcG9ydCB7IFNjcm9sbFRyaWdnZXIgfSBmcm9tIFwiZ3NhcC9TY3JvbGxUcmlnZ2VyXCI7XG5nc2FwLnJlZ2lzdGVyUGx1Z2luKFNjcm9sbFRyaWdnZXIpO1xuXG5jb25zdCBIb21lMiA9ICh7c3RhdGV9KSA9PiB7XG4gIC8vY29uc29sZS5sb2coc3RhdGUpO1xuICBjb25zdCBkYXRhID0gc3RhdGUuc291cmNlLmdldChzdGF0ZS5yb3V0ZXIubGluayk7XG4gIC8vY29uc29sZS5sb2coZGF0YSk7XG4gIGNvbnN0IHBhZ2UgPSBzdGF0ZS5zb3VyY2VbZGF0YS50eXBlXVtkYXRhLmlkXTtcbiAgLy9jb25zb2xlLmxvZyhwYWdlKTtcbiAgY29uc3QgY29udGVudCA9IHBhZ2UuYWNmO1xuICAvL2NvbnNvbGUubG9nKGNvbnRlbnQpO1xuXG4gIGNvbnN0IHZpZGVvU2VjdGlvbiA9IHVzZVJlZihudWxsKTtcbiAgY29uc3QgYmxhY2tTZWN0aW9uID0gdXNlUmVmKG51bGwpO1xuXG4gIGNvbnN0IHBpblZpZGVvU2VjdGlvbiA9ICgpID0+IHtcbiAgICBTY3JvbGxUcmlnZ2VyLmNyZWF0ZSh7XG4gICAgICB0cmlnZ2VyOiBbdmlkZW9TZWN0aW9uLmN1cnJlbnRdLFxuICAgICAgc3RhcnQ6IFwidG9wIHRvcFwiLFxuICAgICAgc2NydWI6IHRydWUsXG4gICAgICBwaW46IHRydWUsXG4gICAgICBwaW5TcGFjaW5nOiBmYWxzZSBcbiAgICB9KTtcbiAgfTtcblxuICBjb25zdCBwaW5CbGFja1NlY3Rpb24gPSAoKSA9PiB7XG4gICAgU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgIHN0YXJ0OiBcImJvdHRvbSBib3R0b21cIixcbiAgICAgIHBpbjogdHJ1ZSxcbiAgICAgIHBpblNwYWNpbmc6IGZhbHNlLFxuICAgIH0pO1xuICB9O1xuXG4gIGNvbnN0IHNjcm9sbEJsYWNrQ29udGVudCA9ICgpID0+IHtcbiAgICBnc2FwLnRvKFtibGFja1NlY3Rpb24uY3VycmVudC5jaGlsZHJlbl0sIHtcbiAgICAgIHlQZXJjZW50OiAtNTAsXG4gICAgICBlYXNlOiBcIm5vbmVcIixcbiAgICAgIHNjcm9sbFRyaWdnZXI6IHtcbiAgICAgICAgdHJpZ2dlcjogW2JsYWNrU2VjdGlvbi5jdXJyZW50XSxcbiAgICAgICAgc3RhcnQ6IFwiYm90dG9tIGJvdHRvbVwiLFxuICAgICAgICBzY3J1YjogdHJ1ZSxcbiAgICAgIH0sXG4gICAgfSk7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICB0cnl7XG4gICAgcGluVmlkZW9TZWN0aW9uKCk7XG4gICAgcGluQmxhY2tTZWN0aW9uKCk7XG4gICAgc2Nyb2xsQmxhY2tDb250ZW50KCk7XG5cbiAgICAvLyBSZWZyZXNoIFNjcm9sbFRyaWdnZXIgd2hlbiBjb21wb25lbnQgbW91bnRzXG4gICAgU2Nyb2xsVHJpZ2dlci5yZWZyZXNoKHRydWUpO1xuXG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkFuIGVycm9yIG9jY3VycmVkIGluIEdTQVAgYW5pbWF0aW9uOlwiLCBlcnJvcik7XG4gICAgICB9XG5cbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICBTY3JvbGxUcmlnZ2VyLmtpbGxBbGwoICkgO1xuICAgICAgfTtcbiAgfSwgW10pO1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICA8Q3Vyc29yIC8+XG4gICAgICA8VmlkZW9TZWN0aW9uIHJlZj17dmlkZW9TZWN0aW9ufT5cbiAgICAgICAgPGRpdlxuICAgICAgICAgIGNzcz17Y3NzYFxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgdG9wOiAwO1xuICAgICAgICAgICAgbGVmdDogMDtcbiAgICAgICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICAgICAgaGVpZ2h0OiAxMDAlO1xuICAgICAgICAgICAgei1pbmRleDogLTE7XG4gICAgICAgICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbiAgICAgICAgICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgICAgICAgYH1cbiAgICAgICAgPlxuICAgICAgICAgIDx2aWRlbyBhdXRvUGxheSBsb29wIG11dGVkIHBsYXlzSW5saW5lIGNzcz17Y3NzYFxuICAgICAgICAgICAgICAgIHdpZHRoOiAxMDB2dztcbiAgICAgICAgICAgICAgICBoZWlnaHQ6IDU2LjI1dnc7XG4gICAgICAgICAgICAgICAgbWluLWhlaWdodDogMTAwdmg7XG4gICAgICAgICAgICAgICAgbWluLXdpZHRoOiAxNzcuNzd2aDsgXG4gICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgICAgICAgICAgICAgIHRvcDogNTAlO1xuICAgICAgICAgICAgICAgIGxlZnQ6IDUwJTtcbiAgICAgICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICAgICAgICAgICAgYH0+XG4gIDxzb3VyY2Ugc3JjPXtjb250ZW50LmludHJvZHVjdGlvbl92aWRlb30gdHlwZT1cInZpZGVvL21wNFwiLz5cbjwvdmlkZW8+XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9WaWRlb1NlY3Rpb24+XG5cbiAgICAgIDxCbGFja1NlY3Rpb24gcmVmPXtibGFja1NlY3Rpb259PlxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxwPntjb250ZW50LnRpdGxlXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cblxuICAgICAgICA8ZGl2PlxuICAgICAgICAgIDxpbWcgc3JjPXtjb250ZW50LmltYWdlXzF9IC8+XG4gICAgICAgICAgPHA+e2NvbnRlbnQudGl0bGVfMn08L3A+XG4gICAgICAgICAgPHA+e2NvbnRlbnQucGFyYWdyYXBoXzF9PC9wPlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvQmxhY2tTZWN0aW9uPlxuXG4gICAgICA8Rmlyc3RDb250YWluZXIvPlxuICAgIDwvPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChIb21lMik7XG5cbmNvbnN0IFZpZGVvU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDEwMHZoO1xuYDtcblxuY29uc3QgRmlyc3RDb250YWluZXIgPSBzdHlsZWQuZGl2YFxud2lkdGg6IDEwMCU7XG5oZWlnaHQ6IDEwMHZoO1xuYmFja2dyb3VuZC1jb2xvcjogcGluaztcbnBvc2l0aW9uOiByZWxhdGl2ZTtcbmA7XG5cbmNvbnN0IEJsYWNrU2VjdGlvbiA9IHN0eWxlZC5kaXZgXG5cbiAgYmFja2dyb3VuZC1jb2xvcjogYmxhY2s7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgcGFkZGluZy1ib3R0b206IDEwMHB4O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcblxuICAgIHAge1xuICAgICAgd2lkdGg6IDUwJTtcbiAgICAgIGZvbnQtc2l6ZTogMzBweDtcbiAgICB9XG4gIH1cblxuICBkaXY6bnRoLW9mLXR5cGUoMikge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvIGF1dG87XG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG87XG5cbiAgICBpbWcge1xuICAgICAgZ3JpZC1yb3c6IDEvMjtcbiAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICB3aWR0aDogNDV2dztcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgZ3JpZC1jb2x1bW46IDIvMztcbiAgICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgICBtYXJnaW4tbGVmdDogMjBweDtcbiAgICAgIG1hcmdpbi10b3A6IDYwcHg7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgfVxuXG4gICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICBncmlkLXJvdzogMi8zO1xuICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgIHdpZHRoOiA0NXZ3O1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcbiAgICB9XG4gIH1cblxuICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgZGl2Om50aC1vZi10eXBlKDEpIHtcbiAgICAgIHAge1xuICAgICAgICB3aWR0aDogNzAlO1xuICAgICAgICBmb250LXNpemU6IDMwcHg7XG4gICAgICB9XG4gICAgfVxuXG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgICAgIFxuICAgICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiBhdXRvO1xuICAgICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBhdXRvIGF1dG8gYXV0bztcbiAgXG4gICAgICBpbWcge1xuICAgICAgICBncmlkLXJvdzogMS8yO1xuICAgICAgICBncmlkLWNvbHVtbjogMS8yO1xuICAgICAgICB3aWR0aDogNTV2dztcbiAgICAgICBcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZ3JpZC1yb3c6IDMvNDtcbiAgICAgICAgZ3JpZC1jb2x1bW46IDEvMjtcbiAgICAgICAgZm9udC1zaXplOiA0dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIGdyaWQtcm93OiAyLzM7XG4gICAgICAgIGdyaWQtY29sdW1uOiAxLzI7XG4gICAgICAgIHdpZHRoOiA1NXZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNDI1cHgpIHtcblxuICAgIGRpdjpudGgtb2YtdHlwZSgxKSB7XG4gICAgICBwIHtcbiAgICAgICAgXG4gICAgICAgIGZvbnQtc2l6ZTogMTB2dztcbiAgICAgIH1cbiAgICB9XG4gICAgZGl2Om50aC1vZi10eXBlKDIpIHtcbiAgXG4gICAgICBpbWcge1xuICAgICAgICB3aWR0aDogNzB2dztcbiAgICAgIH1cbiAgXG4gICAgICBwOm50aC1vZi10eXBlKDEpIHtcbiAgICAgICAgZm9udC1zaXplOiA2dnc7XG4gICAgICB9XG4gIFxuICAgICAgcDpudGgtb2YtdHlwZSgyKSB7XG4gICAgICAgIHdpZHRoOiA3MHZ3O1xuICAgICAgIFxuICAgICAgfVxuICAgIH1cbiAgfVxuICB9XG5gOyJdfQ== */\",toString:_EMOTION_STRINGIFIED_CSS_ERROR__});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./packages/rounda/src/components/home2.js\n");

/***/ })

})